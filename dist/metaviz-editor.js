let metaviz = null;
const logging={CRITICAL:50,ERROR:40,WARNING:30,INFO:20,DEBUG:10,NOTSET:0,_config:{format:"%(asctime) %(message)",level:0},basicConfig:function(o){"format"in o&&(this._config.format=o.format),"level"in o&&this.setLevel(o.level)},setLevel:function(o){this._config.level=o},getEffectiveLevel:function(){return this._config.level},debug:function(o,e=null){this._config.level<=this.DEBUG&&(e?console.debug(this._format(o),e):console.debug(this._format(o)))},info:function(o,e=null){this._config.level<=this.INFO&&(e?console.info(this._format(o),e):console.info(this._format(o)))},warning:function(o,e=null){this._config.level<=this.WARNING&&(e?console.warn(this._format(o),e):console.warn(this._format(o)))},error:function(o,e=null){this._config.level<=this.ERROR&&(e?console.error(this._format(o),e):console.error(this._format(o)))},critical:function(o,e=null){this._config.level<=this.CRITICAL&&(e?console.error(this._format(o),e):console.error(this._format(o)))},log:function(o,e,t=null){this._config.level<=o&&(t?console.log(this._format(e),t):console.log(this._format(e)))},exception:function(o,e=null){this._config.level<=this.ERROR&&(e?console.error(this._format(o),e):console.error(this._format(o)))},_format:function(o){return this._config.format.replace("%(asctime)",(new Date).toLocaleTimeString(metaviz.system.language)).replace("%(message)",o)}};
class MetavizConfig{constructor(){this.pointer={desktop:{value:"",set:function(t){this.value=t},get:function(){return this.value}}},this.touchpad={swipe:{value:"",set:function(t){this.value=t},get:function(){return this.value}}},this.theme={value:"",set:function(t){this.value=t},get:function(){return this.value}},this.toolbars={default:function(){return{top:{autohide:!1,size:40,toolbars:[]},right:{autohide:!1,size:200,toolbars:[]},bottom:{autohide:!1,size:40,toolbars:[]},left:{autohide:!1,size:200,toolbars:[]},toolbarsCount:function(){return this.top.toolbars.length+this.right.toolbars.length+this.bottom.toolbars.length+this.left.toolbars.length}}},load:function(){const t=localStorage.getItem("metaviz.spots");if(t){let e=JSON.parse(t);return e.toolbarsCount=function(){return this.top.toolbars.length+this.right.toolbars.length+this.bottom.toolbars.length+this.left.toolbars.length},e}return this.default()},save:function(t,e,o,i,s=!1,a=null){let n=this.load();const l=this.find(t,e,o,i);null!=a&&(n[e].size=a),-1!=l?n[e].toolbars[l]={name:t,row:o,spotIndex:i,locked:s}:n[e].toolbars.push({name:t,row:o,spotIndex:i,locked:s}),localStorage.setItem("metaviz.spots",JSON.stringify(n))},autoHide:function(t,e){let o=this.load();o[t].autohide=e,localStorage.setItem("metaviz.spots",JSON.stringify(o))},remove:function(t,e,o,i){let s=this.load();for(const a of s[e].toolbars)a.name==t&&a.row==o&&a.spotIndex==i&&arrayRemove(s[e].toolbars,a);localStorage.setItem("metaviz.spots",JSON.stringify(s))},find:function(t,e,o,i){const s=this.load();for(let a=0;a<s[e].toolbars.length;a++)if(s[e].toolbars[a].name==t&&s[e].toolbars[a].row==o&&s[e].toolbars[a].spotIndex==i)return a;return-1}},this.notifications={value:"",set:function(t){this.value=t},get:function(){return this.value}},this.snap={grid:{enabled:!0}},this.load()}load(){this.pointer.desktop.set(localStorage.getItem("metaviz.config.pointer.desktop")||"pan"),this.touchpad.swipe.set(localStorage.getItem("metaviz.config.touchpad.swipe")||"zoom"),this.theme.set(localStorage.getItem("metaviz.config.theme")||"Iron"),this.notifications.set(localStorage.getItem("metaviz.config.notifications")||"minimal"),this.snap.grid.enabled="false"!=localStorage.getItem("metaviz.config.snap.grid.enabled")}save(){localStorage.setItem("metaviz.config.pointer.desktop",this.pointer.desktop.get()),localStorage.setItem("metaviz.config.touchpad.swipe",this.touchpad.swipe.get()),localStorage.setItem("metaviz.config.theme",this.theme.get()),localStorage.setItem("metaviz.config.notifications",this.notifications.get()),localStorage.setItem("metaviz.config.snap.grid.enabled",this.snap.grid.enabled)}}
const registry={nodes:{},links:{},themes:{},add:function(e){if("proto"in e){const s=e.proto.prototype.constructor.name;e.type=s,"name"in e||(e.name=e.type.humanize()),"slug"in e||(e.slug=e.name.slug()),s.startsWith("MetavizNode")?this.nodes[s]=e:s.startsWith("MetavizLink")&&(this.links[s]=e)}else e.type.startsWith("MetavizTheme")&&(this.themes[e.name]=e.vars)}};class Metaviz{constructor(){this.version="0.9.6",this.agent={name:null,client:null,server:null,data:null,db:null},this.container={id:null,element:null,spinnerID:null,getOffset:function(){return this.element.getBoundingClientRect()},expand:function(){this.element.style.position="absolute",this.element.style.width="100%",this.element.style.minWidth="100%",this.element.style.maxWidth="100%",this.element.style.height="100%",this.element.style.minHeight="100%",this.element.style.maxHeight="100%"},compress:function(){this.element.style.position="relative",this.element.style.removeProperty("width"),this.element.style.removeProperty("min-width"),this.element.style.removeProperty("max-width"),this.element.style.removeProperty("height"),this.element.style.removeProperty("min-height"),this.element.style.removeProperty("max-height")},isSmaller:function(){const e=this.getOffset();return e.left>0||e.top>0||window.innerWidth>e.width||window.innerHeight>e.height}},this.config=null,this.format={},this.storage={},this.render=null,this.events=null,this.exchange=null,this.editor=null,this.unittest=null,this.system={os:{name:null,version:null},browser:{name:null,version:null,major:null,mobile:null,zoomFactor:null,pinchFactor:null},language:null,features:{nativeFileSystemApi:!1},compatible:!1,info:function(){return this}},"file:"==window.location.protocol&&(this.agent.name=document.querySelector('meta[name="metaviz:agent:name"]')?.content,this.agent.client="browser",this.agent.data="local",this.agent.db="file")}init(e,s){if(this.container.id=e,this.container.element=document.getElementById(e),this.container.spinnerID=s,this.config=new MetavizConfig,this.format={stack:{in:new MetavizInStack,out:new MetavizOutStack}},this.storage={filesystem:new MetavizFilesystem},this.render=new TotalDiagramRenderHTML5({container:this.container.element,nodes:new MetavizNodesManager,links:new MetavizLinksManager}),this.exchange=new MetavizExchange,this.events=new MetavizEventManager,this.editor=new MetavizEditorBrowser,"standalone"==this.agent.name){const e=document.createElement("script");e.src="metaviz-plugins.js",e.onload=e=>this.editor.menu.regenerateNodesList(),document.body.appendChild(e)}}start(e=null){if(this.editor.start(),"browser"==this.agent.client){for(const[e,s]of Object.entries(registry.themes[localStorage.getItem("metaviz.config.theme")||"Iron"]))document.documentElement.style.setProperty(e,s);this.editor.new(),this.editor.idle(),this.events.call("on:loaded")}}compatibilityTest(){if(window.navigator){const e=[{os:["windows","10"],reg:/(Windows 10.0|Windows NT 10.0)/},{os:["windows","8.1"],reg:/(Windows 8.1|Windows NT 6.3)/},{os:["windows","8"],reg:/(Windows 8|Windows NT 6.2)/},{os:["windows","7"],reg:/(Windows 7|Windows NT 6.1)/},{os:["windows","Vista"],reg:/Windows NT 6.0/},{os:["windows","Server 2003"],reg:/Windows NT 5.2/},{os:["windows","XP"],reg:/(Windows NT 5.1|Windows XP)/},{os:["windows","2000"],reg:/(Windows NT 5.0|Windows 2000)/},{os:["windows","ME"],reg:/(Win 9x 4.90|Windows ME)/},{os:["windows","98"],reg:/(Windows 98|Win98)/},{os:["windows","95"],reg:/(Windows 95|Win95|Windows_95)/},{os:["windows","NT 4.0"],reg:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},{os:["windows","CE"],reg:/Windows CE/},{os:["windows","3.11"],reg:/Win16/},{os:["windows",null],reg:/Windows/},{os:["android",null],reg:/Android/},{os:["openbsd",null],reg:/OpenBSD/},{os:["sunos",null],reg:/SunOS/},{os:["chromeos",null],reg:/CrOS/},{os:["gnulinux",null],reg:/(Linux|X11(?!.*CrOS))/},{os:["ios",null],reg:/(iPhone|iPad|iPod)/},{os:["macos",null],reg:/Mac OS X/},{os:["macos",null],reg:/(Mac OS|MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},{os:["qnx",null],reg:/QNX/},{os:["unix",null],reg:/UNIX/},{os:["beos",null],reg:/BeOS/},{os:["os/2",null],reg:/OS\/2/},{os:["bot",null],reg:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}];for(const s of e)if(s.reg.test(navigator.userAgent)){this.system.os.name=s.os[0],this.system.os.version=s.os[1];break}if("android"==this.system.os.name)this.system.os.version=/(?:Android|Mac OS|Mac OS X|MacPPC|MacIntel|Mac_PowerPC|Macintosh) ([\.\_\d]+)/.exec(navigator.userAgent)[1];else if("ios"==this.system.os.name){const e=/OS (\d+)_(\d+)_?(\d+)?/.exec(navigator.appVersion);this.system.os.version=e[1]+"."+e[2]+"."+(0|e[3])}if(/QtWebEngine/i.test(window.navigator.userAgent)){this.system.browser.name="qtwebengine";const e=/QtWebEngine\/(\d[\d.]+)/.exec(window.navigator.appVersion);e&&2==e.length&&(this.system.browser.version=e[1],this.system.browser.major=parseInt(e[1].split(".")[0]))}else{let e,s,t;-1!=(s=navigator.userAgent.indexOf("Opera"))&&(this.system.browser.name="opera",this.system.browser.version=navigator.userAgent.substring(s+6),-1!=(s=navigator.userAgent.indexOf("Version"))&&(this.system.browser.version=navigator.userAgent.substring(s+8))),-1!=(s=navigator.userAgent.indexOf("OPR"))?(this.system.browser.name="opera",this.system.browser.version=navigator.userAgent.substring(s+4)):-1!=(s=navigator.userAgent.indexOf("Edge"))?(this.system.browser.name="legacyedge",this.system.browser.version=navigator.userAgent.substring(s+5)):-1!=(s=navigator.userAgent.indexOf("Edg"))?(this.system.browser.name="edge",this.system.browser.version=navigator.userAgent.substring(s+4)):-1!=(s=navigator.userAgent.indexOf("MSIE"))?(this.system.browser.name="ie",this.system.browser.version=navigator.userAgent.substring(s+5)):-1!=(s=navigator.userAgent.indexOf("Chrome"))?(this.system.browser.name="chrome",this.system.browser.version=navigator.userAgent.substring(s+7)):-1!=(s=navigator.userAgent.indexOf("Safari"))?(this.system.browser.name="safari",this.system.browser.version=navigator.userAgent.substring(s+7),-1!=(s=navigator.userAgent.indexOf("Version"))&&(this.system.browser.version=navigator.userAgent.substring(s+8))):-1!=(s=navigator.userAgent.indexOf("Firefox"))?(this.system.browser.name="firefox",this.system.browser.version=navigator.userAgent.substring(s+8)):-1!=navigator.userAgent.indexOf("Trident/")?(this.system.browser.name="ie",this.system.browser.version=navigator.userAgent.substring(navigator.userAgent.indexOf("rv:")+3)):(e=navigator.userAgent.lastIndexOf(" ")+1)<(s=navigator.userAgent.lastIndexOf("/"))&&(this.system.browser.name=navigator.userAgent.substring(e,s),this.system.browser.version=navigator.userAgent.substring(s+1),this.system.browser.name.toLowerCase()==this.system.browser.name.toUpperCase()&&(this.system.browser.name=navigator.appName)),-1!=(t=this.system.browser.version.indexOf(";"))&&(this.system.browser.version=this.system.browser.version.substring(0,t)),-1!=(t=this.system.browser.version.indexOf(" "))&&(this.system.browser.version=this.system.browser.version.substring(0,t)),-1!=(t=this.system.browser.version.indexOf(")"))&&(this.system.browser.version=this.system.browser.version.substring(0,t)),this.system.browser.major=parseInt(""+this.system.browser.version,10),isNaN(this.system.browser.major)&&(this.system.browser.version=""+parseFloat(navigator.appVersion),this.system.browser.major=parseInt(navigator.appVersion,10)),this.system.browser.mobile=/Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(navigator.appVersion)}switch(this.system.browser.name){case"safari":case"qtwebengine":this.system.browser.zoomFactor=500,this.system.browser.pinchFactor=100;break;case"chrome":case"firefox":case"edge":this.system.browser.zoomFactor=1e3,this.system.browser.pinchFactor=100;break;case"opera":this.system.browser.zoomFactor=1e3,this.system.browser.pinchFactor=120}switch(this.system.language=window.navigator.language.substring(0,2),this.system.browser.name){case"safari":if(this.system.browser.major<15)return!1;break;case"chrome":case"edge":if(this.system.browser.major<105)return!1;break;case"firefox":if(this.system.browser.major<104)return!1;break;case"opera":if(this.system.browser.major<90)return!1}this.system.features.nativeFileSystemApi="showOpenFilePicker"in window;const s=[Element.prototype.closest];return"edge"==this.system.browser.name&&s.push(window.PointerEvent),this.system.compatible=!0,s.forEach((e=>{e||(this.system.compatible=!1)})),this.system.compatible}return!1}}
function tuid(t=[]){let e="";do{e=String.fromCharCode(97+Math.floor(26*Math.random())),e+=Math.random().toString(36).slice(-6)}while(Array.isArray(t)?t.includes(e):t.hasOwnProperty(e));return e}function assign(t,e){if(Object(t)!==t||Object(e)!==e)return e;for(const o in e)o in t&&(t[o]=assign(t[o],e[o]));return t}function arrayRemove(t,e){const o=t.indexOf(e);-1!==o&&t.splice(o,1)}function dictToUri(t,e=""){let o=[];for(const e in t)t[e]&&o.push(encodeURIComponent(e)+"="+encodeURIComponent(t[e]));return 0==o.length?"":e+o.join("&")}"function"!=typeof String.prototype.uriToDict?String.prototype.uriToDict=function(t=null){let e={};for(const t of this.split("&")){const o=t.split("=");2==o.length&&(e[o[0].replace("?","").trim()]=o[1].trim())}return t?e[t]:e}:console.error("String.prototype.uriToDict already exist"),"function"!=typeof String.prototype.capitalize?String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)}:console.error("String.prototype.capitalize already exist"),"function"!=typeof String.prototype.removeAll?String.prototype.removeAll=function(t){return this.replace(new RegExp(t,"g"),"")}:console.error("String.prototype.removeAll already exist"),"function"!=typeof String.prototype.replaceFirst?String.prototype.replaceFirst=function(t,e){return this.replace(new RegExp("^"+t),e)}:console.error("String.prototype.replaceFirst already exist"),"function"!=typeof String.prototype.replaceLast?String.prototype.replaceLast=function(t,e){return this.replace(new RegExp(t+"$"),e)}:console.error("String.prototype.replaceLast already exist"),"function"!=typeof String.prototype.findAllIndices?String.prototype.findAllIndices=function(t){if(0==t.length)return[];let e,o=0,r=[];for(;(e=this.indexOf(t,o))>-1;)r.push(e),o=e+t.length;return r}:console.error("String.prototype.findAllIndices already exist"),"function"!=typeof String.prototype.basename?String.prototype.basename=function(){return this.replace(/^.*[\\\/]/,"")}:console.error("String.prototype.basename already exist"),"function"!=typeof String.prototype.ext?String.prototype.ext=function(t=null){return t?this.substring(this.lastIndexOf(".")+1,this.length)==t:this.substring(this.lastIndexOf(".")+1,this.length)||""}:console.error("String.prototype.ext already exist"),"function"!=typeof String.prototype.slug?String.prototype.slug=function(){return this.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase().replace(/[^\w\s-]/g,"").replace(/\s+/g,"-").replace(/--+/g,"-").trim()}:console.error("String.prototype.slug already exist"),"function"!=typeof String.prototype.spaceize?String.prototype.spaceize=function(){return this.trimRight()+" "}:console.error("String.prototype.spaceize already exist"),"function"!=typeof String.prototype.toIntOrFloat?String.prototype.toIntOrFloat=function(){return-1!=this.indexOf(",")||-1!=this.indexOf(".")?parseFloat(this.replace(",",".")):parseInt(this)}:console.error("String.prototype.toIntOrFloat already exist"),"function"!=typeof String.prototype.isNumeric?String.prototype.isNumeric=function(){return!isNaN(this)&&!isNaN(parseFloat(this))}:console.error("String.prototype.isNumeric already exist"),"function"!=typeof String.prototype.ellipsis?String.prototype.ellipsis=function(t=10){return this.substr(0,t)+"..."+this.substr(this.length-t,this.length)}:console.error("String.prototype.ellipsis already exist"),"function"!=typeof String.prototype.pxToInt?String.prototype.pxToInt=function(){return parseInt(this.replace("px",""))}:console.error("String.prototype.pxToInt already exist"),"function"!=typeof String.prototype.pxArrToInt?String.prototype.pxArrToInt=function(){const t=this.split(" ");return[parseInt(t[0].replace("px","")),parseInt(t[1].replace("px",""))]}:console.error("String.prototype.pxArrToInt already exist"),"function"!=typeof String.prototype.synopsis?String.prototype.synopsis=function(t=10){const e=document.createElement("div");return e.innerHTML=this.trim(),e.innerText.trim().slice(0,t).replace("<","&lt;").replace(">","&gt;")}:console.error("String.prototype.synopsis already exist"),"function"!=typeof String.prototype.filterEmoji?String.prototype.filterEmoji=function(){let t=this;const e={"😇":/O:\)|:innocent:/g,"😈":/>:\)|:smiling_imp:/g,"😡":/>:\(|:rage:/g,"🙂":/:\)|:smile:/g,"😀":/:D|:grinning:/g,"😆":/XD|:laughing:/g,"🙁":/:\(|:slight_frown:|:sad:/g,"😢":/:'\(|:cry:/g,"😮":/:O|:open_mouth:|:shock:/g,"😛":/:P|:stuck_out_tongue:/g,"😜":/;P|:stuck_out_tongue_winking_eye:/g,"😉":/;\)|:wink:/g,"😎":/B\)|:sunglasses:|:cool:/g,"🐱":/:3|:cat:/g,"😺":/=3|:smiley_cat:/g,"😸":/x3|:smile_cat:/g,"❤️":/<3|:heart:/g,"💩":/\/\\|:poo:/g,"🐽":/:8|\(OO\)|\(oo\)|:pig_nose:/g,"👍":/\+1|:\+1:|:thumbup:|:thumbsup:/g,"👎":/-1|:-1:|:thumbdown:|:thumbsdown:/g};for(const[o,r]of Object.entries(e))t=t.replace(r,o);return t}:console.error("String.prototype.filterEmoji already exist"),"function"!=typeof Number.prototype.bytes2Human?Number.prototype.bytes2Human=function(){return this>1024**5?(this/1024**5).toFixed(2)+" PB":this>1024**4?(this/1024**4).toFixed(2)+" TB":this>1024**3?(this/1024**3).toFixed(2)+" GB":this>1048576?(this/1048576).toFixed(2)+" MB":this>1024?Math.round(this/1024)+" KB":this+" B"}:console.error("Number.prototype.bytes2Human already exist"),"function"!=typeof Number.prototype.clamp?Number.prototype.clamp=function(t,e){return Math.max(t,Math.min(e,this))}:console.error("Number.prototype.clamp already exist"),"function"!=typeof Number.prototype.scale?Number.prototype.scale=function(t,e){const o=(e[1]-e[0])/(t[1]-t[0]);return~~((Math.min(t[1],Math.max(t[0],this))-t[0])*o+e[0])}:console.error("Number.prototype.scale already exist"),"function"!=typeof Math.angle?Math.angle=function(t,e){return Math.atan2(e.y-t.y,e.x-t.x)*(180/Math.PI)}:console.error("Math.angle already exist"),"function"!=typeof Math.round2?Math.round2=function(t){return Math.round(100*(t+Number.EPSILON))/100}:console.error("Math.round2 already exist"),"function"!=typeof Math.randomRange?Math.randomRange=function(t,e){return Math.random()*(e-t)+t}:console.error("Math.randomRange already exist"),"function"!=typeof Math.randomRangeInt?Math.randomRangeInt=function(t,e){return t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t+1))+t}:console.error("Math.randomRangeInt already exist"),"function"!=typeof Element.prototype.hasClass?Element.prototype.hasClass=function(t){return this.classList.contains(t)}:console.error("Element.prototype.hasClass already exist"),"function"!=typeof Element.prototype.hasClasses?Element.prototype.hasClasses=function(t,e=0){if(1==e)return t.some((t=>this.classList.contains(t)))}:console.error("Element.prototype.hasClasses already exist"),"function"!=typeof Element.prototype.moveToEnd?Element.prototype.moveToEnd=function(t){this.parentNode.append(this)}:console.error("Element.prototype.moveToEnd already exist"),"function"!=typeof Window.prototype.clearSelection?Window.prototype.clearSelection=function(t){this.getSelection&&(this.getSelection().empty?this.getSelection().empty():this.getSelection().removeAllRanges&&this.getSelection().removeAllRanges())}:console.error("Window.prototype.clearSelection already exist");
class MetavizEventManager{constructor(){this.listeners={}}subscribe(e,s,t,i){this.listeners[e]={target:s,type:t,listener:i},s.addEventListener(t,i)}listen(e,s){this.subscribe(e,metaviz.render.container,e,s)}call(e,s=null){e in this.listeners&&this.listeners[e].target.dispatchEvent(null===s?new Event(e):new CustomEvent(e,{detail:s}))}unsubscribe(e){e in this.listeners&&(this.listeners[e].target.removeEventListener(this.listeners[e].type,this.listeners[e].listener),delete this.listeners[e])}enable(e){if(":*"==e.slice(-2)){const s=e.slice(0,-2);for(const e of Object.keys(this.listeners))e.split(":")[0]==s&&this.listeners[e].target.addEventListener(this.listeners[e].type,this.listeners[e].listener)}else e in this.listeners&&this.listeners[e].target.addEventListener(this.listeners[e].type,this.listeners[e].listener)}disable(e){if(":*"==e.slice(-2)){const s=e.slice(0,-2);for(const e of Object.keys(this.listeners))e.split(":")[0]==s&&this.listeners[e].target.removeEventListener(this.listeners[e].type,this.listeners[e].listener)}else e in this.listeners&&this.listeners[e].target.removeEventListener(this.listeners[e].type,this.listeners[e].listener)}}
class MetavizControl{constructor(){this.element=null,this.display=null,this.editing=!1}set(e){}get(){return null}edit(e){this.editing=e}on(e,t){this.element.addEventListener(e,(e=>{t(e.target.value||e.target.innerText)}))}show(){this.element.style.display=this.display||"block"}hide(){this.display=this.element.style.display,this.element.style.display="none"}enable(){this.element.readOnly=!1,this.element.disabled=!1}disable(){this.element.readOnly=!0,this.element.disabled=!1}tooltip(e){this.element.title=e}focus(){this.element.focus()}blur(){this.element.blur()}}
class MetavizControlBadge extends MetavizControl{constructor(e=0){super(),this.element=document.createElement("div"),this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-badge"),this.set(e)}set(e){0==e?(this.element.innerText="0",this.element.style.display="none"):e<10?(this.element.innerText=e,this.element.style.display="block"):e>9&&(this.element.innerText="9+",this.element.classList.add("wide"),this.element.style.display="block")}get(){return this.element.innerText}}
class MetavizControlBitmap extends MetavizControl{constructor(t=null){super(),this.uri=null,this.element=document.createElement("div"),this.control=this.element,this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-bitmap"),t&&this.set(t)}set(t){if(this.element.style.backgroundColor="white","String"==t.constructor.name)this.element.style.backgroundImage=`url(${t})`,this.uri=t;else if("File"==t.constructor.name){const e=new FileReader;e.onload=t=>{this.element.style.backgroundImage=`url(${t.target.result})`,this.uri=t.target.result},e.readAsDataURL(t)}}get(){return this.uri}getResolution(t){return new Promise(((e,i)=>{const s=document.createElement("img");s.src=this.uri;const n=new Image;n.addEventListener("load",(()=>{const i=n.naturalWidth>t.maxWidth?t.maxWidth/n.naturalWidth:1;let s=n.naturalWidth*i,r=n.naturalHeight*i;e({width:s,height:r})})),n.src=s.src}))}}
class MetavizControlButton extends MetavizControl{constructor(t=null){super(),this.element=document.createElement("button"),this.control=this.element,this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-button"),t&&(this.element.classList.add("metaviz-control-button-"+t.slug()),this.set(t)),"view"==metaviz.editor.interaction&&this.edit(!1)}set(t){this.element.innerText=t}get(){return this.element.innerText}edit(t){this.editing=!1}}
class MetavizControlIcon extends MetavizControl{constructor(t,e=""){super(),this.family=t,this.name=e,this.build()}set(t,e){this.family=t,this.name=e;const i=this.element.parentNode;this.destroy(),this.build(),i.append(this.element)}build(){this.family.startsWith("fa-")||"fas"==this.family||"far"==this.family||"fab"==this.family?(this.element=document.createElement("i"),this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-icon"),this.element.classList.add(this.family),this.element.classList.add(this.name),this.element.classList.add("metaviz-control-icon-"+this.name.slug())):"svg"==this.family||"img"==this.family?(this.element=document.createElement("img"),this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-icon"),this.name&&(this.element.src=this.name,this.element.classList.add("metaviz-control-icon-"+this.name.slug()))):"emoji"==this.family&&(this.element=document.createElement("div"),this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-icon"),this.element.classList.add("metaviz-control-icon-emoji"),this.name&&(this.element.innerText=this.name)),this.element&&(this.element.ondragstart=function(){return!1})}destroy(){this.element.remove(),this.element=null}}
class MetavizControlInput extends MetavizControl{constructor(e){super();const{name:t=null,value:i=null,placeholder:n=null,onChange:s=null}=e;this.name=t,this.element=document.createElement("input"),i&&this.set(i),n&&(this.element.placeholder=n),this.element.setAttribute("spellcheck","false"),this.element.setAttribute("autocomplete","off"),this.element.setAttribute("name","notASearchField"),this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-input"),this.name&&this.element.classList.add("metaviz-control-input-"+this.name.slug()),"view"==metaviz.editor.interaction&&this.edit(!1),this.element.addEventListener("change",(e=>{s&&s(e.target.value)})),this.element.addEventListener("keyup",(e=>{"Enter"==e.key&&this.element.blur()})),this.element.addEventListener("focus",(e=>{metaviz.events.disable("viewer:keydown"),metaviz.events.disable("viewer:keyup"),metaviz.events.disable("editor:paste"),metaviz.events.disable("editor:keydown"),metaviz.events.disable("editor:keyup"),this.edit(!0)})),this.element.addEventListener("blur",(e=>{this.edit(!1),metaviz.events.enable("viewer:keydown"),metaviz.events.enable("viewer:keyup"),metaviz.events.enable("editor:paste"),metaviz.events.enable("editor:keydown"),metaviz.events.enable("editor:keyup")}))}set(e){this.element.value=e}get(){return this.element.value}enable(){this.element.removeAttribute("readonly")}disable(){this.element.setAttribute("readonly","")}}
class MetavizControlLabel extends MetavizControl{constructor(e){super();const{name:t=null,value:s=null}=e;this.name=t,this.element=document.createElement("div"),this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-label"),this.name&&this.element.classList.add("metaviz-control-label-"+this.name.slug()),s&&this.set(s)}set(e){this.element.innerText=e}get(){return this.element.innerText}}
class MetavizControlSpinner extends MetavizControl{constructor(){super(),this.element=document.createElement("div"),this.control=this.element,this.element.classList.add("metaviz-control-spinner")}show(){this.element.style.display="block"}hide(){this.element.style.display="none"}}
class MetavizControlLink extends MetavizControl{constructor(e=null,t=null){super(),this.element=document.createElement("a"),this.control=this.element,e&&(this.element.href=e,this.element.download=t||e.basename()),this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-link")}set(e,t=null){this.element.href=e,this.element.download=t||e.basename()}get(){return this.element.href}}
class MetavizControlSelect extends MetavizControl{constructor(e=null,t=null,l=null,a=null){super(),this.element=document.createElement("select"),this.control=this.element,this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-select"),a&&this.build(a),l&&this.set(l),this.valuePrev=l||null,this.element.addEventListener("change",(l=>{const a={action:"param",node:{id:e.id},data:{},dataPrev:{}};a.data[t]=l.target.value,a.dataPrev[t]=this.valuePrev,this.valuePrev=l.target.value,metaviz.editor.history.store(a)}))}build(e){for(const[t,l]of Object.entries(e)){const e=document.createElement("option");e.value=t,e.text=l,this.element.appendChild(e)}}set(e){this.element.value=e}get(){return this.element.value}}
class MetavizControlSlider extends MetavizControl{constructor(t,e,i,s,a,n,l){super(),this.drag=!1,this.orientation=n||"h",this.virtual={min:e,max:i,step:a,toVisual:t=>{const e=(t-this.virtual.min)/(this.virtual.max-this.virtual.min);return Math.round(e*(this.visual.max-this.visual.min)+this.visual.min)}},this.visual={min:1,max:200,toVirtual:t=>{const e=(t-this.visual.min)/(this.visual.max-this.visual.min)*(this.virtual.max-this.virtual.min)+this.virtual.min;return Math.round(e/this.virtual.step)*this.virtual.step}},this.element=document.createElement("div"),this.control=this.element,this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-slider"),this.element.classList.add("metaviz-control-slider-"+this.orientation),this.label=document.createElement("label"),this.label.innerText=t,l&&(this.label.title=l),this.element.appendChild(this.label),this.bar=document.createElement("div"),this.bar.classList.add("bar"),this.element.appendChild(this.bar),this.fader=document.createElement("div"),this.fader.classList.add("fader"),this.fader.position=t=>{"h"==this.orientation?(this.fader.style.top="0",this.fader.style.left=t-5+"px"):"v"==this.orientation&&(this.fader.style.top=this.visual.max-t-5+"px",this.fader.style.left="0")},this.fader.position(this.virtual.toVisual(s)),this.bar.appendChild(this.fader),this.input=document.createElement("input"),null!==s&&this.set(s),this.input.setAttribute("spellcheck","false"),this.element.appendChild(this.input),"view"==metaviz.editor.interaction?this.edit(!1):(this.input.addEventListener("change",(t=>{const e=Math.min(this.virtual.max,Math.max(this.virtual.min,this.input.value.toIntOrFloat()));this.input.value=e,this.fader.position(this.virtual.toVisual(e))})),this.input.addEventListener("keyup",(t=>{"Enter"==t.key&&this.input.blur()})),this.input.addEventListener("focus",(t=>{metaviz.events.disable("viewer:keydown"),metaviz.events.disable("viewer:keyup"),metaviz.events.disable("editor:paste"),metaviz.events.disable("editor:keydown"),metaviz.events.disable("editor:keyup")})),this.input.addEventListener("blur",(t=>{metaviz.events.enable("viewer:keydown"),metaviz.events.enable("viewer:keyup"),metaviz.events.enable("editor:paste"),metaviz.events.enable("editor:keydown"),metaviz.events.enable("editor:keyup"),metaviz.render.layers.current.update()})),this.fader.addEventListener("mousedown",(t=>{this.drag=!0,metaviz.events.disable("editor:*")})),this.element.addEventListener("mousemove",(t=>{if(this.drag){const e=this.bar.getBoundingClientRect();let i=0;"h"==this.orientation?i=Math.min(Math.max(this.visual.min,Math.round(t.pageX-e.left)),this.visual.max):"v"==this.orientation&&(i=Math.min(Math.max(this.visual.min,Math.round(this.visual.max-(t.pageY-e.top))),this.visual.max)),this.fader.position(i),this.input.value=this.visual.toVirtual(i)}})),this.element.addEventListener("mouseup",(t=>{this.drag&&(metaviz.events.enable("editor:*"),this.drag=!1)})),this.element.addEventListener("mouseleave",(t=>{this.drag&&(metaviz.events.enable("editor:*"),this.drag=!1)})))}set(t){this.input.value=t}get(){return this.input.value.toIntOrFloat()}setLabel(t){this.label.innerText=t}setMin(t){this.virtual.min=t,this.set(Math.max(this.get(),t)),this.fader.position(this.virtual.toVisual(this.get()))}setMax(t){this.virtual.max=t,this.set(Math.min(this.get(),t)),this.fader.position(this.virtual.toVisual(this.get()))}setStep(t){this.virtual.step=t}setTip(t){this.label.title=t}setOrientation(t){this.element.classList.remove("metaviz-control-slider-h","metaviz-control-slider-v"),this.orientation=t,this.element.classList.add("metaviz-control-slider-"+this.orientation),this.fader.position(this.virtual.toVisual(this.get()))}enable(){this.input.removeAttribute("readonly")}disable(){this.input.setAttribute("readonly","")}}
class MetavizControlRichText extends TotalText{constructor(e){super(e),this.display=null,this.editing=!1;const{name:t=null,onPrevPage:i=null,onNextPage:n=null}=e;this.name=t,this.element.classList.add("metaviz-control"),this.element.classList.add("metaviz-control-richtext"),this.editor.setAttribute("contenteditable",!1),this.toolbar=document.createElement("div"),this.toolbar.classList.add("toolbar"),this.element.append(this.toolbar),this.icons={bold:new MetavizControlRichTextButton({content:'<i class="fa-solid fa-bold"></i>',onClick:()=>{document.execCommand("bold",!1,null),this.editor.focus()}}),italic:new MetavizControlRichTextButton({content:'<i class="fa-solid fa-italic"></i>',onClick:()=>{document.execCommand("italic",!1,null),this.editor.focus()}}),underline:new MetavizControlRichTextButton({content:'<i class="fa-solid fa-underline"></i>',onClick:()=>{document.execCommand("underline",!1,null),this.editor.focus()}}),style:new MenuSelect({placeholder:"Style",options:{div:{icon:"",text:"Normal"},h1:{icon:"",text:"Title"},h2:{icon:"",text:"Subtitle"},h3:{icon:"",text:"Header 1"},h4:{icon:"",text:"Header 2"},h5:{icon:"",text:"Header 3"}},side:"top",value:"div",onShow:()=>{this.editor.focus()},onChange:e=>{document.execCommand("formatBlock",!1,e),this.editor.focus()}}),hr:new MetavizControlRichTextButton({content:'<i class="fa-solid fa-grip-lines"></i>',onClick:()=>{document.execCommand("insertHorizontalRule",!1,null),this.element.focus()}}),prev:new MetavizControlRichTextButton({content:'<i class="fa-solid fa-circle-chevron-left"></i>',onClick:()=>{i&&i()}}),page:new MetavizControlRichTextLabel({content:"1/1"}),next:new MetavizControlRichTextButton({content:'<i class="fa-solid fa-circle-chevron-right"></i>',onClick:()=>{n&&n()}})},this.icons.style.element.style.width="70px",this.icons.style.element.style.height="20px",this.icons.style.element.style.borderRadius="10px";const o=this.icons.style.element.querySelector(".menu-select-current");o.style.marginLeft="7px",o.style.color="#666";this.icons.style.element.querySelector(".menu-select-cloud").style.width="116px",this.icons.prev.element.style.marginLeft="auto";for(const[e,t]of Object.entries(this.icons))this.toolbar.append(t.element);this.editor.addEventListener("click",(e=>{this.readStyle()})),this.editor.addEventListener("keydown",(e=>{this.readStyle()})),this.editor.addEventListener("keyup",(e=>{this.readStyle()})),"view"==metaviz.editor.interaction&&this.edit(!1)}show(){this.element.style.display=this.display||"block"}hide(){this.display=this.element.style.display,this.element.style.display="none"}enable(){}disable(){}tooltip(e){this.element.title=e}focus(){this.element.focus()}blur(){this.element.blur()}edit(e){this.editing=e,e?(metaviz.events.disable("viewer:keydown"),metaviz.events.disable("viewer:keyup"),metaviz.events.disable("editor:paste"),metaviz.events.disable("editor:keydown"),metaviz.events.disable("editor:keyup"),this.editor.classList.add("editing"),this.editor.setAttribute("contenteditable",!0)):(this.editor.setAttribute("contenteditable",!1),this.editor.classList.remove("editing"),metaviz.events.enable("viewer:keydown"),metaviz.events.enable("viewer:keyup"),metaviz.events.enable("editor:paste"),metaviz.events.enable("editor:keydown"),metaviz.events.enable("editor:keyup"),this.onChange&&this.onChange(this.get()))}showToolbar(){this.toolbar.style.display="flex",this.editor.classList.remove("without-toolbar"),this.editor.classList.add("with-toolbar")}hideToolbar(){this.toolbar.style.display="none",this.editor.classList.remove("with-toolbar"),this.editor.classList.add("without-toolbar")}page(e,t){this.icons.page.set(`${e}/${t}`)}getCursorPosition(e=this.editor){let t=0,i=0;const n=e.ownerDocument||e.document,o=n.defaultView||n.parentWindow;let s,l;if(void 0!==o.getSelection){if(s=o.getSelection(),l=s.anchorNode,s.rangeCount>0){var a=o.getSelection().getRangeAt(0),d=a.cloneRange();d.selectNodeContents(e),d.setEnd(a.startContainer,a.startOffset),t=d.toString().length,d.setEnd(a.endContainer,a.endOffset),i=d.toString().length}}else if((s=n.selection)&&"Control"!=s.type){var r=s.createRange(),c=n.body.createTextRange();c.moveToElementText(e),c.setEndPoint("EndToStart",r),t=c.text.length,c.setEndPoint("EndToEnd",r),i=c.text.length}return{start:t,end:i,anchor:l,parent:3==l.nodeType?l.parentNode:l}}readStyle(){let e=this.getCursorPosition().parent.nodeName;["DIV","H1","H2","H3","H4","H5"].includes(e)||(e="div"),this.icons.style.set(e.toLowerCase())}}class MetavizControlRichTextButton{constructor(e){this.element=document.createElement("div"),this.element.classList.add("button"),this.element.innerHTML=e.content,this.element.addEventListener("mousedown",(t=>{t.preventDefault(),t.stopPropagation(),e.onClick()}))}}class MetavizControlRichTextLabel{constructor(e){this.element=document.createElement("div"),this.element.classList.add("label"),this.element.innerHTML=e.content}set(e){this.element.innerHTML=e}}
class MetavizGeometry{getBounds(t){const r={left:1/0,top:1/0,right:-1/0,bottom:-1/0,center:{x:0,y:0},width:0,height:0};return t.forEach((t=>{"transform"in t?(r.left=Math.min(t.transform.x-t.transform.w/2,r.left),r.top=Math.min(t.transform.y-t.transform.h/2,r.top),r.right=Math.max(t.transform.x+t.transform.w/2,r.right),r.bottom=Math.max(t.transform.y+t.transform.h/2,r.bottom)):(t.x<r.left&&(r.left=t.x),t.x>r.right&&(r.right=t.x),t.y<r.top&&(r.top=t.y),t.y>r.bottom&&(r.bottom=t.y))})),r.center={x:(r.left+r.right)/2,y:(r.top+r.bottom)/2},r.width=r.right-r.left,r.height=r.bottom-r.top,r}getAvgHorizMargin(t){return 20}getAvgVertMargin(t){return 20}getTotalWidth(t,r){return t.reduce(((t,e)=>t+this.getSize(e,r).x),0)}getTotalHeight(t,r){return t.reduce(((t,e)=>t+this.getSize(e,r).y),0)}getMaxHeight(t,r){return Math.max(...t.map((t=>this.getSize(t,r).y)))}getSize(t,r){return{x:t.transform.w+(r||0),y:t.transform.h+(r||0)}}}
class MetavizArrangeSort extends MetavizGeometry{generateLines(t,e,i){const h=[[]];return t.forEach((t=>{this.getTotalWidth(h[h.length-1].concat(t),i)>e?h.push([t]):h[h.length-1].push(t)})),h}arrange(t,e){const i="margin"in e?e.margin:0,h=this.getBounds(t),s=this.generateLines(t,h.right-h.left,i),n=s.map((t=>this.getMaxHeight(t,i))).reduce(((t,e)=>t+e),0),r=[];let g=0;return s.forEach((t=>{const e=this.getMaxHeight(t,i),s=this.getTotalWidth(t,i),a=h.center.y+(g-n/2+e/2);let c=0;t.forEach((t=>{const e=h.center.x+(c-s/2+this.getSize(t,i).x/2),n=a;r.push({x:e-this.getSize(t,i).x/2,y:n-this.getSize(t,i).y/2}),c+=this.getSize(t,i).x})),g+=e})),r}}
class MetavizArrangeAlign extends MetavizGeometry{arrange(r,t){return"horizontal"==t.direction?this.arrangeHorizontal(r,t):"vertical"==t.direction?this.arrangeVertical(r,t):void 0}arrangeHorizontal(r,t){const e=this.getBounds(r),o=this.getAvgHorizMargin(r);let a=e.left;r.sort(((r,t)=>r.transform.x-t.transform.x)).forEach((r=>{metaviz.editor.history.store({action:"move",nodes:[r.id],position:{x:a,y:e.center.y}}),r.transform.x=a,r.transform.y=e.center.y,a+=r.transform.w+o})),metaviz.render.layers.update(r)}arrangeVertical(r,t){const e=this.getBounds(r),o=this.getAvgVertMargin(r);let a=e.top;r.sort(((r,t)=>r.transform.y-t.transform.y)).forEach((r=>{metaviz.editor.history.store({action:"move",nodes:[r.id],position:{x:e.center.x,y:a}}),r.transform.x=e.center.x,r.transform.y=a,a+=r.transform.h+o})),metaviz.render.layers.update(r)}}
registry.add({type:"MetavizTheme",name:"Iron",vars:{"--metaviz-logo-save":"#004388","--canvas-bg-color":"#dddfe1","--front-color":"rgb(60, 75, 60)","--front-color-reverse":"rgb(240, 240, 240)","--node-icon":"rgb(60, 75, 60)","--node-icon-subtitle":"rgb(60, 75, 60)","--node-icon-subtitle-weight":"bold","--highlight-color":"rgb(250, 176, 38)","--link-color":"rgb(108, 121, 132)","--menu-background-color":"#eceff4","--menu-key-color":"rgb(65, 192, 240)","--menu-key-color-head":"rgb(65, 192, 240)","--menu-key-color-hi":"rgb(250, 176, 38)","--menu-separator-color":"#d4d7dc","--color-sky":"rgb(234, 246, 254)","--color-grey":"rgb(235,236,237)","--color-jade":"rgb(1, 163, 148)","--color-jade-trans":"rgba(1, 163, 148, 0.69)","--color-jade-light":"rgb(1, 203, 183)","--color-jade-light-trans":"rgba(1, 203, 183, 0.69)","--color-jade-dark":"rgb(2, 141, 127)","--color-jade-dark-trans":"rgba(2, 141, 127, 0.69)","--paper-1":"rgb(235, 236, 237)","--paper-2":"rgb(108, 121, 132)","--paper-2-light":"rgb(126, 139, 149)","--paper-2-light-trans":"rgba(126, 139, 149, 0.69)","--paper-2-dark":"rgb(96, 108, 118)","--paper-2-dark-trans":"rgba(96, 108, 118, 0.69)","--paper-3":"white","--paper-4":"rgb(108, 121, 132)","--paper-5":"rgb(65, 192, 240)","--caret-color-1":"white","--caret-color-2":"black","--font-color-1":"rgb(227, 229, 237)","--font-color-2":"rgb(12, 12, 12)","--glass":"rgba(235, 236, 237, 0.5)","--metaviz-color-cyan":"rgb(65, 192, 240)","--metaviz-color-cyan-trans":"rgba(65, 192, 240, 0.69)"}});
registry.add({type:"MetavizTheme",name:"Covellite",vars:{"--metaviz-logo-save":"rgb(234, 246, 254)","--canvas-bg-color":"#332f56","--front-color":"rgb(240, 240, 240)","--front-reverse":"rgb(60, 75, 60)","--node-icon":"#5c2135","--node-icon-subtitle":"rgb(219, 219, 219)","--node-icon-subtitle-weight":"normal","--highlight-color":"rgb(254, 192, 11)","--link-color":"#963c78","--menu-background-color":"#eceff4","--menu-key-color":"rgb(244, 201, 50)","--menu-key-color-head":"#6c560b","--menu-key-color-hi":"rgb(250, 176, 38)","--menu-separator-color":"#b6bdc5","--color-sky":"rgb(207, 224, 235)","--color-grey":"#c2c1cd","--color-jade":"rgb(121, 158, 160)","--color-jade-trans":"rgba(121, 158, 160, 0.69)","--color-jade-light":"rgb(151, 179, 181)","--color-jade-light-trans":"rgba(151, 179, 181, 0.69)","--color-jade-dark":"rgb(104, 144, 146)","--color-jade-dark-trans":"rgba(104, 144, 146, 0.69)","--paper-1":"rgb(235, 236, 237)","--paper-2":"white","--paper-2-light":"rgb(219, 219, 219)","--paper-2-light-trans":"rgba(219, 219, 219, 0.69)","--paper-2-dark":"rgb(176, 176, 176)","--paper-2-dark-trans":"rgba(176, 176, 176, 0.69)","--paper-3":"white","--paper-4":"#9596de","--paper-5":"#ffc2cd","--caret-color-1":"black","--caret-color-2":"black","--font-color-1":"black","--font-color-2":"rgb(12, 12, 12)","--glass":"#ffc2cd36","--metaviz-color-cyan":"rgb(107, 169, 239)","--metaviz-color-cyan-trans":"rgba(107, 169, 239, 0.69)"}});
class MetavizExchange{constructor(){this.a=document.createElement("a"),this.a.style.display="none",this.a.style.position="absolute",this.a.style.left="-3000px",metaviz.render.container.appendChild(this.a)}download(t){const{data:e=null,path:a=null,name:s="file"}=t;if(a)this.a.href=e;else if(e){const t=new Blob([e]);this.a.href=URL.createObjectURL(t)}s&&(this.a.download=s),this.a.click()}}
class MetavizHistory{constructor(){this.dirty=!1,this.history=[],this.future=[],this.last={type:"MetavizNodeStickyNote"}}store(e){if("meta"in e&&(e.data=e.meta,delete e.meta),"metaPrev"in e&&(e.prev=e.metaPrev,delete e.metaPrev),"dataPrev"in e&&(e.prev=e.dataPrev,delete e.dataPrev),!("data"in e)||!("prev"in e)||JSON.stringify(e.data)!==JSON.stringify(e.prev)){if(e.timestamp=Date.now(),"add"==e.action&&"nodes"in e){const t=e.nodes[e.nodes.length-1];this.last.type=t.type}this.dirty=!0,this.history.push(e),metaviz.events.call("add:history",e)}}restore(e){if("add"==e.action){if("nodes"in e){let t=structuredClone(e.nodes);for(;t.length;){const e=t.pop();metaviz.render.nodes.del(metaviz.render.nodes.get(e.id))}}if("links"in e){let t=structuredClone(e.links);for(;t.length;){const e=t.pop(),i=metaviz.render.links.get(e.id);i&&metaviz.render.links.del(i)}}}else if("del"==e.action){if("nodes"in e){let t=[];for(const i of e.nodes){const e=metaviz.render.nodes.add(i);t.push(e)}for(const e of t)e.start()}if("links"in e)for(const t of e.links)metaviz.render.links.add(t)}else if("move"==e.action)for(const t of e.nodes){const i=metaviz.render.nodes.get(t);"offset"in e?i.subPosition(e.offset):"position"in e&&i.setPosition(e.positionPrev),i.update(),i.links.get().forEach((e=>e.update()))}else if("resize"==e.action){const t=metaviz.render.nodes.get(e.nodes[0]);t.transform.w=e.sizePrev.w,t.transform.h=e.sizePrev.h,t.update()}else if("param"==e.action){const t=metaviz.render.nodes.get(e.node.id);for(const[i,o]of Object.entries(e.prev))t.meta.set(i,o)}else if("parent"==e.action){const t=metaviz.render.nodes.get(e.node.id);t.setParent(e.node.parentPrev),t.setPosition(e.node.positionPrev),t.render(),t.update()}else if("board"==e.action)metaviz.editor.setBoardName(e.namePrev);else if("chat"==e.action){metaviz.render.nodes.get(e.node.id).recvMessage(e.datetime,e.avatar,e.user,e.body)}}undo(){const e=this.history.pop();return!!e&&(this.restore(e),this.future.push(this.mirror(e)),!0)}hasUndo(){return this.history.length}redo(){const e=this.future.pop();return!!e&&(this.restore(e),this.history.push(this.mirror(e)),!0)}hasRedo(){return this.future.length}recreate(){this.get(!0).forEach((e=>{if("add"==e.action){if("nodes"in e){let t=[];for(const i of e.nodes){const e=metaviz.render.nodes.add(i);e.update(),t.push(e)}for(const e of t)e.start()}if("links"in e)for(const t of e.links)metaviz.render.links.add(t)}else if("del"==e.action){if("nodes"in e){let t=structuredClone(e.nodes);for(;t.length;){const e=t.pop();metaviz.render.nodes.del(metaviz.render.nodes.get(e.id))}}if("links"in e){let t=structuredClone(e.links);for(;t.length;){const e=t.pop(),i=metaviz.render.links.get(e.id);i&&metaviz.render.links.del(i)}}}else if("move"==e.action)for(const t of e.nodes){const i=metaviz.render.nodes.get(t);"offset"in e?i.addPosition(e.offset):"position"in e&&i.setPosition(e.position),i.update(),i.links.get().forEach((e=>e.update()))}else if("resize"==e.action){const t=metaviz.render.nodes.get(e.nodes[0]),i=metaviz.render.layers.current.getNode(e.nodes[0]);t.transform.w=e.size.w,t.transform.h=e.size.h,i.w=e.size.w,i.h=e.size.h,t.update()}else if("param"==e.action){const t=metaviz.render.nodes.get(e.node.id);for(const[i,o]of Object.entries(e.data))t.meta.set(i,o)}else if("parent"==e.action){const t=metaviz.render.nodes.get(e.node.id);t.setParent(e.node.parent),t.setPosition(e.node.position),t.render(),t.update()}else if("board"==e.action)metaviz.editor.setBoardName(e.name);else if("chat"==e.action){metaviz.render.nodes.get(e.node.id).recvMessage(e.datetime,e.avatar,e.user,e.body)}}))}isDirty(){return this.dirty}mirror(e){const t={...e};if("add"==t.action)t.action="del";else if("del"==t.action)t.action="add";else if("move"==t.action&&"offset"in t)t.offset.x=-t.offset.x,t.offset.y=-t.offset.y;else if("move"==t.action&&"position"in t){const e=t.position.x,i=t.position.y;t.position.x=t.positionPrev.x,t.position.y=t.positionPrev.y,t.positionPrev.x=e,t.positionPrev.y=i}else if("param"==t.action&&"data"in t&&"prev"in t){const e=t.data;t.data=t.prev,t.prev=e}else if("resize"==t.action&&"size"in t&&"sizePrev"in t){const e=t.size;t.size=t.sizePrev,t.sizePrev=e}else if("parent"==t.action&&"node"in t){const e=t.node.parent;t.node.parent=t.node.parentPrev,t.node.parentPrev=e;const i=t.node.position;t.node.position.x=t.node.positionPrev.x,t.node.position.y=t.node.positionPrev.y,t.node.positionPrev.x=i.x,t.node.positionPrev.y=i.y}else if("board"==t.action){const e=t.name,i=t.namePrev;t.name=i,t.namePrev=e}return t}set(e){this.history=e}get(e=!1){return e?this.history.sort(((e,t)=>e.timestamp-t.timestamp)):this.history}clearHistory(){this.history=[]}clearFuture(){this.future=[]}clear(){this.clearHistory(),this.clearFuture()}}
class MetavizLink extends TotalDiagramLink{constructor(t){super(t),"start"in t&&("string"==typeof t.start?this.start=metaviz.render.nodes.get(t.start):"object"==typeof t.start&&(this.start=t.start)),"end"in t&&("string"==typeof t.end?this.end=metaviz.render.nodes.get(t.end):"object"==typeof t.end&&(this.end=t.end))}visible(t=null){if(null===t)return"block"==this.element.style.display;this.element.style.display=1==t?"block":"none"}}
class MetavizLinksManager extends TotalDiagramLinksManager{constructor(){super(),this.layers=null}add(e,t=!0){if("string"==typeof e&&(e=JSON.parse(e)),!e.start||!e.end)return null;const r=metaviz.render.nodes.get(e.start),n=metaviz.render.nodes.get(e.end);if(!r||!n)return null;const s=new registry.links[e.type].proto({id:e.id,type:e.type,start:r,end:n});return this.list.push(s),this.render.board.append(s.element),t||s.visible(!1),s}}
class MetavizSocket{constructor(t){this.name=t.name,this.element=document.createElement("div"),this.element.classList.add("metaviz-socket-hook"),this.element.style.position="absolute",this.element.style.display="none",this.circle=document.createElement("div"),this.circle.classList.add("metaviz-socket"),this.circle.style.position="absolute",this.circle.style.display="none",this.circle.dataset.nodeId=t.node.id,metaviz.render.container.append(this.circle),this.transform={x:0,y:0,border:0,set:t=>{this.transform.x=t.x,this.transform.y=t.y,"border"in t&&(this.transform.border=t.border)}},assign(this.transform,t.transform),this.parent=null,"parent"in t&&this.attachTo(t.parent)}destructor(){this.parent&&this.parent.remove(this.element)}attachTo(t){this.parent=t,this.parent.append(this.element)}visualize(t){if("object"==typeof t){const e=metaviz.container.getOffset();this.circle.style.transform=`translate(${t.x-6+this.transform.border+e.left}px, ${t.y-6+this.transform.border+e.top}px)`,this.circle.style.display="block"}else"boolean"==typeof t&&0==t&&(this.circle.style.display="none")}}
class MetavizNode extends TotalDiagramNode{constructor(t){super(t),this.element.classList.add("metaviz-node"),this.parent="parent"in t?t.parent:null,this.parentNode=null,this.slot="meta"in t&&"slot"in t.meta?t.meta.slot:null,this.meta=t.meta??{},this.meta.set=function(t,e){this[t]=e},this.meta.get=function(t){return this[t]},this.transform.prev={x:0,y:0,store:()=>{this.transform.prev.x=this.transform.x,this.transform.prev.y=this.transform.y}},this.sockets={list:[],add:t=>{this.sockets.list.push(t)},del:t=>{t.destructor(),arrayRemove(this.sockets.list,remove)},get:(t=null)=>{if(null===t)return this.sockets.list;if("object"==typeof t){let e={socket:null,distance:1/0};return this.sockets.list.forEach((s=>{const i=t.x-(this.transform.x+s.transform.x),r=t.y-(this.transform.y+s.transform.y),n=Math.sqrt(Math.pow(i,2)+Math.pow(r,2));e.distance>n&&(e={socket:s,distance:n})})),{x:this.transform.x-this.transform.ox+(e.socket?e.socket.transform.x:0),y:this.transform.y-this.transform.oy+(e.socket?e.socket.transform.y:0)}}return null},hide:()=>{this.sockets.list.forEach((t=>{t.visualize(!1)}))}},this.isVisible=!0,this.locked="locked"in t&&t.locked,this.controls={},this.element.classList.add("metaviz-node-"+registry.nodes[t.type]?.slug),this.options={},this.localOptions={set:(t,e)=>{metaviz.storage.db.table.localOptions.set({id:metaviz.editor.id+"-"+this.constructor.name,option:t,value:e})},get:async t=>await metaviz.storage.db.table.localOptions.get({id:metaviz.editor.id+"-"+this.constructor.name,option:t})},this.selected=!1,this.focused=!1,this.selectedBox=document.createElement("div"),this.highlight=document.createElement("div"),this.highlight.classList.add("metaviz-node-highlight"),this.highlight.style.display="none",this.element.append(this.highlight),this.animIcon=document.createElement("div"),this.animIcon.classList.add("anim-icon"),this.animIcon.style.position="absolute",this.animIcon.style.zIndex="var(--z-node-anim-icon)",this.animIcon.style.display="none",this.element.append(this.animIcon),this.sizePrev={w:null,h:null},this.isElastic=!1}setStyle(t,e=null){null!==e&&(this.element.style[t]=e)}getStyle(t=null){return null!==t?this.element.style[t]:this.element.style}setTemplate(t){this.element.innerHTML=t}addControl(t){this.controls[t.name]=t,this.element.append(t.control)}delControl(t){this.element.remove(t.control),delete this.controls[t.name]}addControls(t){for(const[e,s]of Object.entries(t))this.controls[e]=s,this.element.append(s.element)}edit(t){for(const[e,s]of Object.entries(this.controls))s.edit(t);1==t&&metaviz.events.call("on:edit")}getEditingControl(){for(const[t,e]of Object.entries(this.controls))if(e.editing)return e;return null}click(){}dblclick(){}lockToggle(){this.locked?this.unlock():this.lock()}blur(){for(const[t,e]of Object.entries(this.controls))e.blur();this.element.blur(),metaviz.events.call("on:edited")}visible(t=null){if(null===t)return this.isVisible;this.element.style.display=t?"flex":"none";for(const e of this.links.get())e.visible(t);this.isVisible=t}getPosition(){let t=this.transform.x,e=this.transform.y;if(this.parentNode instanceof MetavizNodeGroup||this.parentNode instanceof MetavizNodeFrame){const s=this.parentNode.getPosition();t+=s.x,e+=s.y}return{x:t,y:e}}setParent(t,e){null==t?(this.parent=null,this.parentNode=null,e&&(this.slot=e)):"object"==typeof t?(this.parent=t.id,this.parentNode=metaviz.render.nodes.get(t.id),e&&(this.slot=e)):(this.parent=t,this.parentNode=metaviz.render.nodes.get(t.id))}unParent(){this.parent=null,this.parentNode=null,this.slot&&(this.slot=null)}getParentFolder(){for(const t of this.getUpTree())if(t.id!=this.id&&t instanceof MetavizNodeFolder)return t;return null}setChildren(t,e,s=null){t.setParent(this,e)}unChildren(t){t.unParent(this)}getTree(){const t=[this];for(const e of metaviz.render.nodes.get())this.id==e.parent&&t.push(...e.getTree());return t}getUpTree(){const t=[this];return this.parentNode&&t.push(...this.parentNode.getUpTree()),t}getDownTree(t={}){const{direction:e="out",types:s=[]}=t;"type"in t&&s.push(t.type);const i=[];return"out"!=e&&"both"!=e||this.links.get().forEach((t=>{s.length?s.includes(t.end.constructor.name)&&i.push(t.end):i.push(t.end)})),"in"!=e&&"both"!=e||metaviz.render.nodes.get().forEach((t=>{t.id!=this.id&&t.links.get().forEach((e=>{e.end.id==this.id&&(s.length?s.includes(t.constructor.name)&&i.push(t):i.push(t))}))})),i}serialize(){let t={...this.meta};return t.hasOwnProperty("set")&&delete t.set,t.hasOwnProperty("get")&&delete t.get,{id:this.id,parent:this.parent,type:this.constructor.name,data:t,locked:this.locked}}serializeWithTransform(){let t={...this.meta};return t.hasOwnProperty("set")&&delete t.set,t.hasOwnProperty("get")&&delete t.get,{id:this.id,parent:this.parent,type:this.constructor.name,data:t,locked:this.locked,x:this.transform.x,y:this.transform.y,w:this.transform.w,h:this.transform.h,zindex:this.transform.zindex}}migrate(t){"v"in this.meta||(this.meta.v=t)}setSize(t,e=!1){if(super.setSize(t),e){const e=metaviz.render.layers.current.getNode(this.id);e.w=t.width,e.h=t.height,this.update(),metaviz.editor.history.store({action:"resize",nodes:[this.id],size:{w:this.transform.w,h:this.transform.h},sizePrev:{w:this.sizePrev.w,h:this.sizePrev.h}})}}getSize(){return{width:this.transform.w,height:this.transform.h,minWidth:this.transform.wmin,minHeight:this.transform.hmin,maxWidth:this.transform.wmax,maxHeight:this.transform.hmax,mode:"ratio"}}storeSize(){assign(this.sizePrev,this.transform)}addSockets(t=null){if(t)for(const[e,s]of Object.entries(t))this.sockets.add(s);else this.sockets.add(new MetavizSocket({name:"north",node:{id:this.id},parent:this.element,transform:{x:this.transform.ox,y:this.transform.oy-this.transform.h/2}})),this.sockets.add(new MetavizSocket({name:"east",node:{id:this.id},parent:this.element,transform:{x:this.transform.ox+this.transform.w/2,y:this.transform.oy}})),this.sockets.add(new MetavizSocket({name:"south",node:{id:this.id},parent:this.element,transform:{x:this.transform.ox,y:this.transform.oy+this.transform.h/2}})),this.sockets.add(new MetavizSocket({name:"west",node:{id:this.id},parent:this.element,transform:{x:this.transform.ox-this.transform.w/2,y:this.transform.oy}}))}updateSockets(){this.sockets.list.forEach((t=>{switch(t.name){case"north":t.transform.x=this.transform.ox,t.transform.y=this.transform.oy-this.transform.h/2;break;case"east":t.transform.x=this.transform.ox+this.transform.w/2,t.transform.y=this.transform.oy;break;case"south":t.transform.x=this.transform.ox,t.transform.y=this.transform.oy+this.transform.h/2;break;case"west":t.transform.x=this.transform.ox-this.transform.w/2,t.transform.y=this.transform.oy}}))}addOptions(t){for(const[e,s]of Object.entries(t))this.options[e]=s}pipeline(){const t=new MetavizEngineStream;for(const e of this.links.get())e.end.id==this.id&&t.add(e.start.pipeline());return t}pipelineSend(t){for(const e of this.links.get())e.start.id==this.id&&e.end.pipelineRecv(t)}pipelineRecv(t){}pipelineReturn(t){}select(){this.selected=!0,this.element.classList.add("selected"),this.highlight.style.display="block",this.render()}deselect(){window.clearSelection(),this.highlight.style.display="none",this.blur(),this.element.classList.remove("selected"),this.selected=!1}focus(){this.focused=!0,this.element.classList.add("focused"),this.highlight.style.display="none";const t=this.getSize();this.transform.w=t.width,this.transform.h=t.height,metaviz.editor.cage.show(this.transform,this.resize),this.render()}unfocus(){this.element.classList.remove("focused"),this.highlight.style.display="block",this.sockets.hide(),metaviz.editor.cage.hide(),this.focused=!1}intersects(t,e){return this.parent==metaviz.render.nodes.parent&&(this.transform.x>=t.x&&this.transform.y>=t.y&&this.transform.x<=e.x&&this.transform.y<=e.y||(this.transform.x+this.transform.w>=t.x&&this.transform.y>=t.y&&this.transform.x+this.transform.w<=e.x&&this.transform.y<=e.y||(this.transform.x+this.transform.w>=t.x&&this.transform.y+this.transform.h>=t.y&&this.transform.x+this.transform.w<=e.x&&this.transform.y<=e.y+this.transform.h||this.transform.x>=t.x&&this.transform.y+this.transform.h>=t.y&&this.transform.x<=e.x&&this.transform.y<=e.y+this.transform.h)))}fixURI(t){return""==t?"":"http"==t.substring(0,4)||"file"==t.substring(0,4)?t:"media/"+t}search(t){return!1}convert(){}flush(){}lock(){this.locked=!0,metaviz.editor.history.store({action:"lock",node:{id:this.id,locked:!0}})}unlock(){this.locked=!1,metaviz.editor.history.store({action:"lock",node:{id:this.id,locked:!1}})}menu(){return{options:this.options}}animateIcon(t){this.animIcon.innerHTML=t,this.animIcon.style.display="block",this.animIcon.style.left=this.transform.ox-this.animIcon.offsetWidth/2+"px",this.animIcon.style.top=this.transform.oy-this.animIcon.offsetHeight/2+"px",this.animIcon.style.animationPlayState="running",setTimeout((()=>this.animateIconStop()),790)}animateIconStop(){this.animIcon.style.animationPlayState="paused",this.animIcon.style.display="none"}elastic(t){this.isElastic=t,1==t?(this.transform.ox=0,this.transform.oy=0,this.setStyle("borderRadius","0"),this.setStyle("width","100%"),this.setStyle("height","100%"),this.setStyle("position","relative"),this.setStyle("transform","translate(0px, 0px) scale(1)")):(this.element.removeAttribute("style"),this.setSize({width:this.transform.w,height:this.transform.h}),this.update())}miniature(t=!1){}exit(){return!0}renderChildren(t){}render(){if(this.parent?(this.parentNode||(this.parentNode=metaviz.render.nodes.get(this.parent)),this.parentNode&&this.parentNode.renderChildren(this)):null!=metaviz.render.nodes.parent||this.visible()||this.visible(!0),this.focused){const t={north:metaviz.render.world2Screen({x:this.transform.x,y:this.transform.y-this.transform.oy}),east:metaviz.render.world2Screen({x:this.transform.x+this.transform.ox,y:this.transform.y+this.transform.h/2-this.transform.oy}),south:metaviz.render.world2Screen({x:this.transform.x,y:this.transform.y+this.transform.h-this.transform.oy}),west:metaviz.render.world2Screen({x:this.transform.x-this.transform.ox,y:this.transform.y+this.transform.h/2-this.transform.oy}),center:metaviz.render.world2Screen({x:this.transform.x,y:this.transform.y})};this.sockets.list.forEach((e=>{e.visualize(t[e.name])}))}}update(){0==this.isElastic&&super.update(),this.updateSockets()}}
class MetavizNodesManager extends TotalDiagramNodesManager{constructor(){super(),this.layers=null,this.parent=null}add(e,s=!0){"string"==typeof e&&(e=JSON.parse(e));let t=null;return e.type in registry.nodes?("name"in e||(e.name=registry.nodes[e.type].name),t=new registry.nodes[e.type].proto(e),this.list.push(t)):(t=new MetavizNodeDummy(e),this.list.push(t)),s||t.visible(!1),this.render.board.append(t.element),t.awake(),t}}
class MetavizNavigatorBrowser{constructor(){this.interaction={mode:"idle",object:null},this.transform={x:0,y:0,delta:{x:0,y:0,get:function(){return this.x+this.y}},start:(e,t)=>{this.transform.x=e-metaviz.render.margin.left,this.transform.y=t-metaviz.render.margin.top},update:(e,t)=>{this.transform.delta.x=e-metaviz.render.margin.left-this.transform.x,this.transform.delta.y=t-metaviz.render.margin.top-this.transform.y,this.transform.x=e-metaviz.render.margin.left,this.transform.y=t-metaviz.render.margin.top},end:()=>{this.transform.x=0,this.transform.y=0,this.transform.delta.x=0,this.transform.delta.y=0}},this.initFulscreenSwitch(),this.initEvents()}initEvents(){this.initViewerKeyboardEvents(),this.initViewerMouseEvents(),"ontouchstart"in window&&this.initViewerTouchEvents()}initViewerKeyboardEvents(){metaviz.events.subscribe("viewer:keydown",document,"keydown",(e=>{})),metaviz.events.subscribe("viewer:keyup",document,"keyup",(e=>{}))}initViewerMouseEvents(){this.mouseDown=e=>{0!=e.button&&1!=e.button||(document.addEventListener("mousemove",this.mouseMove),document.addEventListener("mouseup",this.mouseUp),this.transform.start(e.clientX,e.clientY))},this.mouseTrack=e=>{this.transform.update(e.clientX,e.clientY)},this.mouseMove=e=>{1!=e.which||e.target.id!=metaviz.container.id&&!e.target.hasClass("metaviz-link")||"node"==this.interaction.object||"box"==this.interaction.object||"socket"==this.interaction.object?2==e.which&&(this.interaction.object="desktop",metaviz.container.element.style.cursor="grabbing",metaviz.render.pan(e.movementX/window.devicePixelRatio,e.movementY/window.devicePixelRatio)):(this.interaction.object="desktop",metaviz.container.element.style.cursor="grabbing",metaviz.render.pan(e.movementX/window.devicePixelRatio,e.movementY/window.devicePixelRatio))},this.mouseUp=()=>{metaviz.container.element.style.cursor="auto",document.removeEventListener("mousemove",this.mouseMove),document.removeEventListener("mouseup",this.mouseUp),this.transform.end()},this.mouseWheelZoom=e=>{e.preventDefault(),metaviz.render.zoom(e.pageX,e.pageY,e.deltaY,metaviz.system.browser.zoomFactor)},this.mouseWheelPanPinch=e=>{e.preventDefault(),e.ctrlKey?metaviz.render.zoom(e.pageX,e.pageY,e.deltaY,metaviz.system.browser.pinchFactor):metaviz.render.pan(-e.deltaX/window.devicePixelRatio,-e.deltaY/window.devicePixelRatio)},this.prevent=e=>{e.preventDefault()},metaviz.events.subscribe("viewer:mousedown",metaviz.render.container,"mousedown",this.mouseDown),metaviz.events.subscribe("always:mousetrack",metaviz.render.container,"mousemove",this.mouseTrack),metaviz.events.subscribe("viewer:mousewheel",metaviz.render.container,"firefox"==metaviz.system.browser.name?"wheel":"mousewheel","pan"==metaviz.config.touchpad.swipe.get()?this.mouseWheelPanPinch:this.mouseWheelZoom),metaviz.events.subscribe("browser:prevent",metaviz.render.container,"firefox"==metaviz.system.browser.name?"wheel":"mousewheel",this.prevent),metaviz.events.disable("browser:prevent"),metaviz.events.subscribe("viewer:mouseleave",document,"mouseout",(e=>{const t=e.relatedTarget||e.toElement;t&&"HTML"!=t.nodeName||this.mouseUp()}))}clearViewerMouseEvents(){metaviz.events.unsubscribe("viewer:mousedown"),metaviz.events.unsubscribe("viewer:mousewheel"),metaviz.events.unsubscribe("always:mousetrack"),metaviz.events.unsubscribe("viewer:mouseleave"),metaviz.events.unsubscribe("browser:prevent")}restartViewerMouseEvents(){this.clearViewerMouseEvents(),this.initViewerMouseEvents()}initViewerTouchEvents(){let e,t;this.touchStart=s=>{1==s.touches.length?(e={x:s.touches[0].pageX,y:s.touches[0].pageY},document.addEventListener("touchmove",this.touchMove),document.addEventListener("touchend",this.touchEnd)):2==s.touches.length&&(t=Math.hypot(s.touches[0].pageX-s.touches[1].pageX,s.touches[0].pageY-s.touches[1].pageY))},this.touchMove=s=>{if(1==s.touches.length)metaviz.render.pan(s.touches[0].pageX-e.x,s.touches[0].pageY-e.y),e={x:s.touches[0].pageX,y:s.touches[0].pageY};else if(2==s.touches.length){const e=s.touches[0].pageX,i=s.touches[0].pageY,n=s.touches[1].pageX,o=s.touches[1].pageY,r=Math.hypot(e-n,i-o);metaviz.render.pinchZoom(e,i,n,o,r/t),t=r}},this.touchEnd=e=>{document.removeEventListener("touchmove",this.touchMove),document.removeEventListener("touchend",this.touchEnd)},metaviz.events.subscribe("editor:touchstart",metaviz.render.container,"touchstart",this.touchStart)}initFulscreenSwitch(){if(metaviz.container.isSmaller()){const e=document.createElement("i");e.classList.add("metaviz-button-fullscreen","expand","fa-solid","fa-expand"),e.addEventListener("click",(t=>{e.hasClass("expand")?(e.classList.remove("expand","fa-expand"),metaviz.container.expand(),e.classList.add("compress","fa-compress")):e.hasClass("compress")&&(e.classList.remove("compress","fa-compress"),metaviz.container.compress(),e.classList.add("expand","fa-expand"))})),metaviz.container.element.append(e)}}}
class MetavizCage{constructor(e){this.mode="ratio",this.margin=8,this.resize=4,this.element=document.createElement("div"),this.element.classList.add("metaviz-cage"),this.element.style.display="none",this.n=document.createElement("div"),this.n.classList.add("frame"),this.element.append(this.n),this.e=document.createElement("div"),this.e.classList.add("frame"),this.element.append(this.e),this.s=document.createElement("div"),this.s.classList.add("frame"),this.element.append(this.s),this.w=document.createElement("div"),this.w.classList.add("frame"),this.element.append(this.w),this.nw=document.createElement("div"),this.nw.classList.add("resize"),this.nw.classList.add("corner"),this.nw.classList.add("nw"),this.element.append(this.nw),this.ne=document.createElement("div"),this.ne.classList.add("resize"),this.ne.classList.add("corner"),this.ne.classList.add("ne"),this.element.append(this.ne),this.se=document.createElement("div"),this.se.classList.add("resize"),this.se.classList.add("corner"),this.se.classList.add("se"),this.element.append(this.se),this.sw=document.createElement("div"),this.sw.classList.add("resize"),this.sw.classList.add("corner"),this.sw.classList.add("sw"),this.element.append(this.sw),metaviz.render.container.append(this.element),this.offset={prevX:0,prevY:0,direction:{x:1,y:1},init:function(e,t){this.prevX=e,this.prevY=t},delta:function(e,t){const s={x:(e-this.prevX)*this.direction.x,y:(t-this.prevY)*this.direction.y};return this.prevX=e,this.prevY=t,s},deltaAvg:function(e,t){const s=e-this.prevX,i=t-this.prevY;this.prevX=e,this.prevY=t;const n=(s*this.direction.x+i*this.direction.y)/2;return{x:2*n,y:2*n}},deltaRatio:function(e,t,s,i){const n={x:(e-this.prevX)*this.direction.x,y:(t-this.prevY)*this.direction.y};this.prevX=e,this.prevY=t;const r=Math.abs(n.x)>Math.abs(n.y)?n.x:n.y;return{x:r*s*2,y:r*i*2}}},this.resizeStartEvent=this.resizeStart.bind(this),this.resizeDragEvent=this.resizeDrag.bind(this),this.resizeEndEvent=this.resizeEnd.bind(this),this.resizeOutEvent=this.resizeOut.bind(this),this.nw.addEventListener("pointerdown",this.resizeStartEvent),this.ne.addEventListener("pointerdown",this.resizeStartEvent),this.se.addEventListener("pointerdown",this.resizeStartEvent),this.sw.addEventListener("pointerdown",this.resizeStartEvent)}show(e){this.update(e),this.element.style.display="block",metaviz.events.disable("viewer:*"),metaviz.events.disable("editor:paste"),metaviz.events.disable("editor:keydown"),metaviz.events.disable("editor:keyup"),metaviz.events.enable("browser:prevent")}hide(){this.element.style.display="none",metaviz.events.disable("browser:prevent"),metaviz.events.enable("viewer:*"),metaviz.events.enable("editor:paste"),metaviz.events.enable("editor:keydown"),metaviz.events.enable("editor:keyup")}resizeStart(e){e.stopPropagation(),metaviz.editor.menu.hide(),metaviz.events.disable("viewer:mousedown"),metaviz.events.disable("editor:pointermove"),e.target.hasClass("nw")?this.offset.direction={x:-1,y:-1}:e.target.hasClass("ne")?this.offset.direction={x:1,y:-1}:e.target.hasClass("se")?this.offset.direction={x:1,y:1}:e.target.hasClass("sw")&&(this.offset.direction={x:-1,y:1});metaviz.editor.selection.getFocused().storeSize();this.offset.init(e.x,e.y),metaviz.render.container.addEventListener("pointermove",this.resizeDragEvent),metaviz.render.container.addEventListener("pointerup",this.resizeEndEvent),document.addEventListener("mouseout",this.resizeOutEvent)}resizeDrag(e){const t=metaviz.editor.selection.getFocused(),s=t.getSize();let i=null;switch(s.mode){case"free":i=this.offset.delta(e.x,e.y);break;case"avg":i=this.offset.deltaAvg(e.x,e.y);break;case"ratio":const s=(t.transform.w/t.transform.h).toFixed(2);i=this.offset.deltaRatio(e.x,e.y,s,1)}t.setSize({width:Math.min(Math.max(s.width+i.x,s.minWidth),s.maxWidth),height:Math.min(Math.max(s.height+i.y,s.minHeight),s.maxHeight)}),t.update();for(const e of t.links.get())e.update();this.update(t.transform)}resizeEnd(e){const t=metaviz.editor.selection.nodes[0].getSize(),s="avg"==t.mode?this.offset.deltaAvg(e.x,e.y):this.offset.delta(e.x,e.y),i=metaviz.editor.snapToGrid(Math.min(Math.max(t.width+s.x,t.minWidth),t.maxWidth),Math.min(Math.max(t.height+s.y,t.minHeight),t.maxHeight));metaviz.editor.selection.nodes[0].setSize({width:i.x,height:i.y},!0),metaviz.render.container.removeEventListener("pointermove",this.resizeDragEvent),metaviz.render.container.removeEventListener("pointerup",this.resizeEndEvent),document.removeEventListener("mouseout",this.resizeOutEvent),metaviz.events.enable("viewer:mousedown"),metaviz.events.enable("editor:pointermove")}resizeCancel(){metaviz.render.container.removeEventListener("pointermove",this.resizeDragEvent),metaviz.render.container.removeEventListener("pointerup",this.resizeEndEvent),document.removeEventListener("mouseout",this.resizeOutEvent),metaviz.events.enable("viewer:mousedown"),metaviz.events.enable("editor:pointermove")}resizeOut(e){const t=e.relatedTarget||e.toElement;t&&"HTML"!=t.nodeName||this.resizeEnd(e)}update(e){const t=metaviz.container.getOffset(),s=metaviz.render.world2Screen({x:e.x-e.ox-this.margin+t.x,y:e.y-e.oy-this.margin+t.y}),i=metaviz.render.world2Screen({x:e.x-e.ox+e.w+this.margin+e.border+t.left,y:e.y-e.oy+e.h+this.margin+e.border+t.top}),n=i.x-s.x,r=i.y-s.y;this.element.style.transform=`translate(${s.x}px, ${s.y}px)`,this.n.style.transform="translate(0px, 0px)",this.n.style.width=`${n}px`,this.e.style.transform=`translate(${n}px, 0px)`,this.e.style.height=`${r}px`,this.s.style.transform=`translate(0px, ${r}px)`,this.s.style.width=`${n}px`,this.w.style.transform="translate(0px, 0px)",this.w.style.height=`${r}px`,this.nw.style.transform=`translate(${-this.resize}px, ${-this.resize}px)`,this.ne.style.transform=`translate(${n-this.resize}px, ${-this.resize}px)`,this.se.style.transform=`translate(${n-this.resize}px, ${r-this.resize}px)`,this.sw.style.transform=`translate(${-this.resize}px, ${r-this.resize}px)`,metaviz.editor.selection.nodes.length&&metaviz.editor.selection.getFocused().render()}}
class MetavizEditorKeyboard{constructor(e){this.editor=e,this.key={ctrl:!1,alt:!1,shift:!1,clear:function(){this.ctrl=!1,this.alt=!1,this.shift=!1}},this.initEvents()}initEvents(){metaviz.events.subscribe("editor:textsafe:keydown",document,"keydown",(e=>{17!=e.keyCode&&("macos"!=metaviz.system.os.name||91!=e.keyCode&&93!=e.keyCode&&224!=e.keyCode)||(this.key.ctrl=!0),18==e.keyCode&&(this.key.alt=!0),16==e.keyCode?this.key.shift=!0:this.key.ctrl&&!this.key.alt&&83==e.keyCode?(e.preventDefault(),this.editor.history.isDirty()&&this.editor.save()):this.key.ctrl&&!this.key.alt&&76==e.keyCode&&(e.preventDefault(),this.editor.linkToggleSelected())})),metaviz.events.subscribe("editor:keydown",document,"keydown",(e=>{this.editor.interaction.locked||(this.key.ctrl&&!this.key.alt&&65==e.keyCode?(e.preventDefault(),this.editor.selection.all()):!this.key.ctrl||this.key.alt||this.key.shift||90!=e.keyCode?this.key.ctrl&&!this.key.alt&&this.key.shift&&90==e.keyCode?(e.preventDefault(),this.editor.history.redo()&&(metaviz.render.layers.current.render(),metaviz.render.layers.current.update())):this.key.ctrl&&!this.key.alt&&46==e.keyCode?(e.preventDefault(),this.editor.nodeDeleteSelectedInstantly()):46==e.keyCode?(e.preventDefault(),this.editor.nodeDeleteSelected()):27==e.keyCode?(e.preventDefault(),this.editor.menu.hide()):32!=e.keyCode&&8!=e.keyCode||e.target.isContentEditable||["INPUT","TEXTAREA"].includes(e.target.nodeName)||e.preventDefault():(e.preventDefault(),this.editor.history.undo()&&(metaviz.render.layers.current.render(),metaviz.render.layers.current.update())))})),metaviz.events.subscribe("editor:textsafe:keyup",document,"keyup",(e=>{!this.key.ctrl||17!=e.keyCode&&("macos"!=metaviz.system.os.name||91!=e.keyCode&&93!=e.keyCode&&224!=e.keyCode)||(this.key.ctrl=!1),this.key.alt&&18==e.keyCode&&(this.key.alt=!1),this.key.shift&&16==e.keyCode&&(this.key.shift=!1)}))}}
class MetavizEditorPointer{constructor(t){this.editor=t,this.clicked=null,this.offset={x1:0,y1:0,x2:0,y2:0,start:function(t,e){this.x1=this.x2=t,this.y1=this.y2=e},update:function(t,e){this.x2=t,this.y2=e},get:function(){return Math.abs(this.x2-this.x1+(this.y2-this.y1))},getCoords:function(){return{x:this.x2-this.x1,y:this.y2-this.y1}}},this.timestamp=Date.now(),this.dblclickThreshold=300,this.dragStarted=!1,this.initMouseEvents()}initMouseEvents(){metaviz.events.subscribe("editor:pointerdown",metaviz.render.container,"pointerdown",(t=>{this.editor.interaction.locked||"mouse"!=t.pointerType||0!=t.button||this.pointerStart(t)})),metaviz.events.subscribe("editor:pointermove",metaviz.render.container,"pointermove",(t=>{!this.editor.interaction.locked&&"mouse"==t.pointerType&&1==t.buttons&&["node","socket","box"].includes(this.editor.interaction.object)&&this.pointerMove(t)})),metaviz.events.subscribe("editor:pointerup",metaviz.render.container,"pointerup",(t=>{this.editor.interaction.locked||"mouse"!=t.pointerType||(0==t.button?this.pointerEnd(t):2==t.button&&this.pointerEndForMenu(t))}))}pointerStart(t){const e=Date.now();e-this.timestamp<this.dblclickThreshold?this.dblclick(t):(this.timestamp=e,"DIV"==t.target.nodeName&&t.target.hasClass("metaviz-socket")?(this.clicked=metaviz.render.nodes.get(t.target.dataset.nodeId),this.editor.interaction.object="socket"):(this.clicked=metaviz.render.nodes.get(t.target),!this.clicked||this.editor.keyboard.key.ctrl||this.editor.keyboard.key.alt||(this.editor.interaction.object="node",this.editor.selection.get(this.clicked)||this.editor.selection.set(this.clicked))),this.offset.start(t.x,t.y))}pointerMove(t){this.offset.update(t.x,t.y),!this.dragStarted&&this.offset.get()>2&&("socket"==this.editor.interaction.object?(this.editor.dragLinkStart(),this.editor.interaction.mode="drag"):"node"==this.editor.interaction.object&&(this.editor.dragSelectionStart(),this.editor.selection.count()&&(this.editor.interaction.mode="drag")),this.dragStarted=!0),"drag"==this.editor.interaction.mode&&("socket"==this.editor.interaction.object?this.editor.dragLinkMove():"node"==this.editor.interaction.object&&this.editor.dragSelectionMove())}pointerEnd(t){if("idle"==this.editor.interaction.mode)this.clicked?this.editor.keyboard.key.ctrl&&!this.editor.keyboard.key.alt?this.editor.selection.get(this.clicked)?this.editor.selection.del(this.clicked):this.editor.selection.add(this.clicked):!this.editor.keyboard.key.ctrl&&this.editor.keyboard.key.alt:this.editor.keyboard.key.ctrl||this.editor.keyboard.key.alt||this.editor.selection.clear();else if("drag"==this.editor.interaction.mode){if("node"==this.editor.interaction.object){let e=!1;for(const i of t.composedPath())if("DIV"==i.nodeName){if(i.hasClass("metaviz-parent")){const t=metaviz.render.nodes.get(i);for(const e of this.editor.selection.get().filter((t=>!t.locked)))e.setStyle("pointer-events","auto"),e.setStyle("z-index","var(--z-node)"),e.edit(!1),e.element.classList.remove("drag"),t.setChildren(e,i.dataset.slot,this.offset.getCoords());e=!0;break}}else if("SPAN"==i.nodeName){if(i.hasClass("metaviz-breadcrumb")&&i.dataset.folder!=metaviz.render.nodes.parent){const t=null!=i.dataset.folder?metaviz.render.nodes.get(i.dataset.folder):null;if(null==t)if(confirm("Move selected node(s) to the root folder?"))for(const t of this.editor.selection.get()){const e=t.parent,i={x:t.transform.x-this.offset.getCoords().x,y:t.transform.y-this.offset.getCoords().y};t.parent=null,t.transform.clear(),t.render(),t.update(),t.setStyle("pointer-events","auto"),t.setStyle("z-index","var(--z-node)"),t.edit(!1),t.element.classList.remove("drag"),metaviz.editor.history.store({action:"parent",node:{id:t.id,parent:null,parentPrev:e,position:{x:0,y:0},positionPrev:i}})}else metaviz.editor.dragSelectionCancel();else t.setChildren(this.editor.selection.get(),i.dataset.slot);e=!0;break}metaviz.editor.dragSelectionCancel()}e||this.editor.dragSelectionEnd()}else if("socket"==this.editor.interaction.object){let e=!1;for(const i of t.composedPath())if("DIV"==i.nodeName&&i.hasClass("metaviz-node")){this.editor.dragLinkEnd(metaviz.render.nodes.get(i.dataset.id)),e=!0;break}e||this.editor.dragLinkEnd(null)}else"box"==this.editor.interaction.object&&this.editor.dragBoxEnd();this.editor.selection.transform.clear()}else this.clicked.click();this.editor.interaction.mode="idle",this.editor.interaction.object=null,this.dragStarted=!1}pointerEndForMenu(t){this.editor.keyboard.key.ctrl||(this.clicked=metaviz.render.nodes.get(t.target),this.clicked&&(this.editor.selection.clear(),this.editor.selection.set(this.clicked),this.editor.interaction.object="node"))}dblclick(t){!this.clicked&&this.editor.keyboard.key.ctrl?metaviz.editor.nodeAdd(this.editor.history.last.type,{x:t.offsetX,y:t.offsetY}):this.clicked&&this.clicked.dblclick()}}
class MetavizContextMenu extends TotalProMenu{constructor(e){super({container:metaviz.render.container});const{projectName:t=""}=e;this.subAddNode=new SubMenu({text:"Add node"}),this.panel.left.add(this.subAddNode);this.generateNodesList();const n=new SubMenu({text:"Edit selection"});this.panel.left.add(n);const i=new SubMenu({text:"Navigation"});this.panel.left.add(i),i.add(new MenuGroup({text:"Navigation",widgets:[new MenuOption({text:"Centre Board",onChange:()=>{this.hide(),metaviz.render.center()}})]})),n.add(new MenuGroup({text:"Node options",widgets:[]})),n.add(new MenuGroup({text:"Node local options",widgets:[]})),n.add(new MenuGroup({text:"Node functions",widgets:[]})),n.add(new MenuOption({text:"Link",shortcut:[17,76],onChange:()=>{metaviz.editor.linkToggleSelected(),this.hide()}})),n.add(new MenuOption({text:"Lock",onChange:()=>{metaviz.editor.selection.nodes[0].lockToggle(),this.hide()}})),"browser"==!metaviz.agent.client&&n.add(new MenuOption({text:"Copy url of node",onChange:()=>{let e=window.location.search.uriToDict();e.node=metaviz.editor.selection.nodes[0].id,metaviz.editor.clipboard.set(location.protocol+"//"+location.host+location.pathname+"?"+dictToUri(e)),this.hide()}})),n.add(new MenuSeparator),n.add(new MenuOption({text:"Sort",onChange:()=>{metaviz.editor.arrangeSort(),this.hide()}})),n.add(new MenuOption({text:"Align Horizontal",onChange:()=>{metaviz.editor.arrangeHorizontal(),this.hide()}})),n.add(new MenuOption({text:"Align Vertical",onChange:()=>{metaviz.editor.arrangeVertical(),this.hide()}})),n.add(new MenuOption({text:"Move to Foreground",onChange:()=>{metaviz.editor.arrangeZ(1),this.hide()}})),n.add(new MenuOption({text:"Move to Background",onChange:()=>{metaviz.editor.arrangeZ(-1),this.hide()}})),n.add(new MenuOption({text:"Reset Translations",onChange:()=>{metaviz.editor.arrangeReset(),this.hide()}})),n.add(new MenuSeparator),n.add(new MenuOption({text:"Delete Node",onChange:()=>{metaviz.editor.nodeDeleteSelected(),this.hide()}})),this.panel.left.add(new MenuSeparator),"local"==metaviz.agent.data&&"file"==metaviz.agent.db&&(this.panel.left.add(new MenuOption({text:"New",shortcut:[17,78],onChange:()=>{this.hide();let e="Create new diagram?";editor.history.isDirty()&&(e+="\nUnsaved changes will be lost."),confirm(e)&&metaviz.editor.new()}})),this.panel.left.add(new MenuOption({text:"Open File...",shortcut:[17,79],onChange:()=>{this.hide(),metaviz.editor.open()}})),this.panel.left.add(new MenuOption({text:"Save",shortcut:[17,83],onChange:()=>{this.hide(),metaviz.editor.save()}})),this.panel.left.add(new MenuSeparator)),this.panel.left.add(new MenuOption({text:"Undo",shortcut:[17,90],onChange:()=>{this.hide(),metaviz.editor.history.undo()}})),this.panel.left.add(new MenuOption({text:"Redo",shortcut:[17,16,90],onChange:()=>{this.hide(),metaviz.editor.history.redo()}})),this.panel.left.add(new MenuSeparator),this.panel.left.add(new MenuOption({text:"Cut",shortcut:[17,88],onChange:()=>{metaviz.editor.cut(),this.hide()}})),this.panel.left.add(new MenuOption({text:"Copy",shortcut:[17,67],onChange:()=>{metaviz.editor.copy(),this.hide()}})),this.panel.left.add(new MenuOption({text:"Paste",shortcut:[17,86],onChange:()=>{metaviz.editor.paste(),this.hide()}})),this.panel.left.add(new MenuOption({text:"Duplicate",shortcut:[17,68],onChange:()=>{metaviz.editor.duplicate(),this.hide()}})),this.panel.left.add(new MenuSeparator);let o=null;"app"!=metaviz.agent.client&&(o=new SubMenu({text:"Settings"}),this.panel.left.add(o),o.add(new MenuGroup({text:"Project settings",widgets:[new MenuInput({id:"total-pro-menu-project-name",placeholder:"Project name",value:t,onChange:e=>{metaviz.editor.history.store({action:"board",name:e.target.value,namePrev:metaviz.editor.getBoardName()}),metaviz.editor.setBoardName(e.target.value)}})]})),metaviz.events.listen("update:projectname",(e=>{const t=this.panel.left.find("total-pro-menu-project-name");t&&t.set(e.detail)}),!1),o.add(new MenuSeparator),o.add(new MenuGroup({text:"Local settings",widgets:[]})),o.add(new MenuGroup({text:"Naviagtion",widgets:[new MenuSelect({placeholder:"Primal pointer device",options:{pan:{icon:"",text:"Moving: Touchpad-centric"},zoom:{icon:"",text:"Moving: Mouse-centric"}},value:metaviz.config.touchpad.swipe.get(),onChange:e=>{metaviz.config.touchpad.swipe.set(e),metaviz.config.save(),metaviz.editor.restartViewerMouseEvents()}}),new MenuSelect({placeholder:"Click on desktop",options:{pan:{icon:"",text:"Click on desktop: Pan view"},box:{icon:"",text:"Click on desktop: Selection"}},value:metaviz.config.pointer.desktop.get(),onChange:e=>{metaviz.config.pointer.desktop.set(e),metaviz.config.save()}})]})),o.add(new MenuGroup({text:"Helpers",widgets:[new MenuSwitch({text:"Auto-Align",value:metaviz.config.snap.grid.enabled,onChange:e=>{metaviz.config.snap.grid.enabled=e,metaviz.config.save()}})]})),o.add(new MenuGroup({text:"Look & feel",widgets:[new MenuSelect({placeholder:"Select color theme",options:{Iron:{icon:"",text:"Theme: Iron"},Covellite:{icon:"",text:"Theme: Covellite"}},value:metaviz.config.theme.get(),onChange:e=>{for(const[t,n]of Object.entries(registry.themes[e]))document.documentElement.style.setProperty(t,n);metaviz.config.theme.set(e),metaviz.config.save()}})]})),o.add(new MenuGroup({text:"Notifications",widgets:[new MenuOption({text:"Allow notifications",onChange:()=>{Notification.requestPermission().then((e=>{})),this.hide()}}),new MenuSelect({placeholder:"Text on notification box",options:{sound:{icon:"",text:"Play sound only"},minimal:{icon:"",text:"Display notification"},user:{icon:"",text:"Notification with user name"},message:{icon:"",text:"Notification with message"}},value:metaviz.config.notifications.get(),onChange:e=>{metaviz.config.notifications.set(e),metaviz.config.save()}})]})));const a=new SubMenu({text:"Help"});this.panel.left.add(a),a.add(new MenuGroup({text:`Metaviz ${metaviz.version}`,widgets:[new MenuOption({text:"GitHub page",onChange:()=>window.open("https://github.com/dariuszdawidowski/metaviz-editor")}),new MenuOption({text:"Submit issue",onChange:()=>window.open("https://github.com/dariuszdawidowski/metaviz-editor/issues")})]})),this.element.addEventListener("scroll",(e=>{this.subAddNode.panel.scroll(0,this.subAddNode.panel.scrollTop-e.detail),n.panel.scroll(0,n.panel.scrollTop-e.detail),i.panel.scroll(0,i.panel.scrollTop-e.detail),o&&o.panel.scroll(0,o.panel.scrollTop-e.detail),a.panel.scroll(0,a.panel.scrollTop-e.detail)}))}generateNodesList(){const e={"Default Nodes":[]};for(const[t,n]of Object.entries(registry.nodes)){const i="menu"in n?n.menu:"Default Nodes";i in e||(e[i]=[]),e[i].push(new MenuOption({id:`total-pro-menu-node-${n.name.slug()}`,text:n.name,onChange:()=>{metaviz.editor.nodeAdd(t,this.position("first click")),this.hide()}}))}for(const[t,n]of Object.entries(e))this.subAddNode.add(new MenuGroup({text:t,widgets:n}))}regenerateNodesList(){this.subAddNode.del(),this.generateNodesList()}show(e,t){if(!t.interaction.locked&&!t.popup?.visible){e.preventDefault(),e.stopPropagation(),metaviz.events.disable("viewer:*"),metaviz.events.disable("editor:copy"),metaviz.events.disable("editor:paste"),metaviz.events.disable("editor:keydown"),metaviz.events.disable("editor:keyup"),metaviz.events.disable("editor:wheel"),metaviz.events.disable("editor:pointerdown"),metaviz.events.disable("editor:pointermove"),metaviz.events.disable("editor:pointerup"),metaviz.events.enable("browser:prevent"),this.panel.left.deselect(),this.panel.left.disable();const n=metaviz.render.nodes.get(e.target);n?(t.interaction.object="node",t.selection.set(n)):t.selection.clear();for(const e of t.selection.get())e.piemenu?.hide();if(0==t.selection.count()&&this.panel.left.find("total-pro-menu-add-node")?.enable().select(),t.selection.count()>0){this.panel.left.find("total-pro-menu-edit-selection")?.enable(),this.panel.left.find("total-pro-menu-edit-selection")?.select();const e=t.selection.getFocused().menu(),n=this.panel.left.find("total-pro-menu-node-options");n.del(),n.hide();const i=this.panel.left.find("total-pro-menu-node-local-options");if(i.del(),i.hide(),1==t.selection.count()){if("options"in e)if(Array.isArray(e.options))for(const t of e.options)n.add(t);else for(const t of Object.values(e.options))n.add(t);else n.add(new MenuOption({text:"No options",disabled:!0}));if(n.show(),"localOptions"in e&&e.localOptions.length){for(const t of e.localOptions)i.add(t);i.show()}}}t.selection.count()>0&&(metaviz.editor.selection.getFocused().locked?this.panel.left.find("total-pro-menu-lock")?.setName("Locked"):this.panel.left.find("total-pro-menu-lock")?.setName("Unlocked")),t.selection.count()>1?(this.panel.left.find("total-pro-menu-sort")?.enable(),this.panel.left.find("total-pro-menu-align-horizontal")?.enable(),this.panel.left.find("total-pro-menu-align-vertical")?.enable()):(this.panel.left.find("total-pro-menu-sort")?.disable(),this.panel.left.find("total-pro-menu-align-horizontal")?.disable(),this.panel.left.find("total-pro-menu-align-vertical")?.disable()),1==t.selection.count()&&t.selection.getFocused().parentNode?.element.hasClass("metaviz-anchor")?this.panel.left.find("total-pro-menu-unanchor")?.enable():this.panel.left.find("total-pro-menu-unanchor")?.disable(),2==t.selection.count()?metaviz.render.links.get(t.selection.nodes[0],t.selection.nodes[1])?this.panel.left.find("total-pro-menu-link")?.enable().setName("Unlink"):this.panel.left.find("total-pro-menu-link")?.enable().setName("Link"):2!=t.selection.count()&&this.panel.left.find("total-pro-menu-link")?.disable(),this.panel.left.find("total-pro-menu-delete-node")?.setName(`Delete Node${t.selection.count()>1?"s":""} (${t.selection.count()})`),"local"==metaviz.agent.data&&"file"==metaviz.agent.db&&(this.panel.left.find("total-pro-menu-new")?.enable(),this.panel.left.find("total-pro-menu-open-file")?.enable(),t.history.isDirty()&&this.panel.left.find("total-pro-menu-save")?.enable()),t.history.hasUndo()&&this.panel.left.find("total-pro-menu-undo")?.enable(),t.history.hasRedo()&&this.panel.left.find("total-pro-menu-redo")?.enable(),t.selection.count()>0?(this.panel.left.find("total-pro-menu-cut")?.enable(),this.panel.left.find("total-pro-menu-copy")?.enable(),this.panel.left.find("total-pro-menu-duplicate")?.enable()):t.clipboard?.count()>0&&this.panel.left.find("total-pro-menu-paste")?.enable(),this.panel.left.find("total-pro-menu-navigation")?.enable(),this.panel.left.find("total-pro-menu-toolbars")?.enable(),this.panel.left.find("total-pro-menu-settings")?.enable(),this.panel.left.find("total-pro-menu-help")?.enable();const i=metaviz.container.getOffset();super.show({left:e.clientX-i.x,top:e.clientY-i.y})}}hide(){super.hide(),metaviz.events.disable("browser:prevent"),metaviz.events.enable("viewer:*"),metaviz.events.enable("editor:copy"),metaviz.events.enable("editor:paste"),metaviz.events.enable("editor:keydown"),metaviz.events.enable("editor:keyup"),metaviz.events.enable("editor:wheel"),metaviz.events.enable("editor:pointerdown"),metaviz.events.enable("editor:pointermove"),metaviz.events.enable("editor:pointerup")}}
class MetavizSelection{constructor(){this.nodes=[],this.transform={x:0,y:0,update:function(t){this.x-=t.x,this.y-=t.y},getOffset:function(t={x:0,y:0}){return{x:-this.x+t.x,y:-this.y+t.y}},total:function(){return this.x+this.y},clear:function(){this.x=0,this.y=0}},this.box={element:null,startPos:{x:0,y:0},endPos:{x:0,y:0},position:function(t,s,e,i){let n=0,o=0,h=0,r=0;e>t?(n=t,h=e-t):(n=t-(t-e),h=t-e),i>s?(o=i-(i-s),r=i-s):(o=i,r=s-i),this.element.style.transform=`translate(${n}px, ${o}px)`,this.element.style.width=`${h}px`,this.element.style.height=`${r}px`},start:function(t,s){this.startPos.x=t,this.startPos.y=s,this.position(this.startPos.x,this.startPos.y,this.startPos.x,this.startPos.y)},end:function(t,s){this.endPos.x=t,this.endPos.y=s,this.position(this.startPos.x,this.startPos.y,this.endPos.x,this.endPos.y)},leftTop:function(){let t=0,s=0;return t=this.endPos.x>this.startPos.x?this.startPos.x:this.endPos.x,s=this.endPos.y>this.startPos.y?this.startPos.y:this.endPos.y,{x:t,y:s}},rightBottom:function(){let t=0,s=0;return t=this.endPos.x>this.startPos.x?this.endPos.x:this.startPos.x,s=this.endPos.y>this.startPos.y?this.endPos.y:this.startPos.y,{x:t,y:s}},show:function(){this.element.style.display="block"},hide:function(){this.element.style.display="none"},intersection:t=>{t.forEach((t=>{t.intersects(metaviz.render.screen2World(this.box.leftTop()),metaviz.render.screen2World(this.box.rightBottom()))&&this.add(t)}))}},this.box.element=document.createElement("div"),this.box.element.classList.add("metaviz-selection"),this.box.hide(),metaviz.render.container.append(this.box.element)}add(t){this.nodes.push(t),this.nodes.forEach((t=>{t.unfocus(),t.select()})),t.focus(),this.nodes.length>1&&this.nodes.forEach((t=>{t.piemenu?.hide()}))}del(t){this.nodes.forEach((t=>{t.unfocus()})),t.deselect(),arrayRemove(this.nodes,t)}set(t){this.clear(),this.add(t)}get(t=null){return t?this.nodes.find((s=>s.id==t.id)):this.nodes}getFirst(){return this.nodes.length>0?this.nodes[0]:null}getFocused(){for(const t of this.nodes)if(t.focused)return t;return null}all(){this.clear();for(const t of metaviz.render.nodes.get())t.parent==metaviz.render.nodes.parent&&this.add(t)}clear(){for(const t of this.nodes)t.unfocus(),t.deselect();this.nodes=[]}count(){return this.nodes.length}}
class MetavizEditorBrowser extends MetavizNavigatorBrowser{constructor(e){super(e),this.id=null,this.name="",this.interaction={mode:"idle",drag:!1,link:null,locked:!1,lock:()=>{this.interaction.locked=!0},unlock:()=>{this.interaction.locked=!1},clear:()=>{this.interaction.mode="idle",this.interaction.drag=!1,this.interaction.locked=!1}},this.selection=new MetavizSelection,this.arrange={sort:new MetavizArrangeSort,align:new MetavizArrangeAlign,settings:{margin:40}},this.history=new MetavizHistory,this.menu=new MetavizContextMenu({projectName:this.name}),this.keyboard=new MetavizEditorKeyboard(this),this.pointer=new MetavizEditorPointer(this),this.cage=new MetavizCage,this.file={handle:null,clear:()=>{this.file.handle=null}},this.spinner=document.getElementById(metaviz.container.spinnerID),metaviz.render.container.focus()}initEvents(){super.initEvents(),this.initEditorLeaveEvents(),this.initEditorMenuEvents()}initEditorLeaveEvents(){metaviz.events.subscribe("window:close",window,"beforeunload",(e=>{this.flush(!0);return this.history.isDirty()?((e||window.event).returnValue="o/","o/"):null})),metaviz.events.subscribe("window:out",window,"mouseout",(e=>{null!=e.relatedTarget&&"HTML"!=e.relatedTarget.nodeName||(this.keyboard.key.clear(),this.flush(!1))}))}initEditorMenuEvents(){metaviz.events.subscribe("editor:menu",metaviz.render.container,"contextmenu",(e=>{this.menu.show(e,this)}))}start(){}nodeAdd(e,t){let i=metaviz.render.screen2World(t);metaviz.config.snap.grid.enabled&&(i=this.snapToGrid(i.x,i.y));const n=metaviz.render.nodes.add({id:crypto.randomUUID(),parent:metaviz.render.nodes.parent,type:e,...i});n.render(),n.update(),n.start(),this.history.clearFuture(),this.history.store({action:"add",nodes:[n.serializeWithTransform()]})}nodeDeleteSelected(){this.selection.count()>0&&(this.nodeDelete(this.selection.get(),!0),this.selection.clear())}nodeDeleteSelectedInstantly(){this.selection.count()>0&&(this.nodeDelete(this.selection.get(),!1),this.selection.clear())}nodeDelete(e,t=!1){let i=!1;if(t){let t=null;1==e.length?t="Delete node and it's contents?":2==e.length?t="Delete 2 nodes and it's contents?":e.length>2&&(t=`Multiple nodes selected. Delete all ${this.selection.nodes.length} nodes and it's contents?`),i=confirm(t)}else i=!0;if(i){const t=e.flatMap((e=>e.getTree())),i=t.map((e=>e.serializeWithTransform())),n=[...new Set(t.flatMap((e=>e.links.get().map((e=>e.serialize())))).map((e=>e.id)))].map((e=>metaviz.render.links.get(e).serialize()));this.history.store({action:"del",nodes:i,links:n});for(const e of t)metaviz.render.nodes.del(e);metaviz.render.layers.current.render(),metaviz.render.layers.current.update()}}snapToGrid(e,t,i=16){return{x:Math.round(e/i)*i,y:Math.round(t/i)*i}}linkSelected(){if(2==this.selection.count()){let e="MetavizLinkBezier";if("MetavizNodeTeleport"==this.selection.nodes[0].constructor.name){if(e="MetavizLinkSymlink",this.selection.nodes[0].links.get().length>0)return void alert("Only one link for this node is allowed")}else"MetavizNodeCollection"!=this.selection.nodes[0].constructor.name&&"MetavizNodeCollection"!=this.selection.nodes[1].constructor.name||(e="MetavizLinkSymlink");const t=metaviz.render.links.add({id:crypto.randomUUID(),type:e,start:this.selection.nodes[0],end:this.selection.nodes[1]});this.history.store({action:"add",links:[t.serialize()]}),this.selection.clear(),metaviz.render.layers.current.render(),metaviz.render.layers.current.update()}}linkDeleteSelected(e=!0){if(2==this.selection.count()){let t=!e;if(e&&confirm("Delete link?")&&(t=!0),t){const e=metaviz.render.links.get(this.selection.nodes[0],this.selection.nodes[1]);e&&(this.history.store({action:"del",links:[e.serialize()]}),metaviz.render.links.del(e),this.selection.clear(),metaviz.render.layers.current.render(),metaviz.render.layers.current.update())}}}linkToggleSelected(){if(2==this.selection.count()){metaviz.render.links.get(this.selection.nodes[0],this.selection.nodes[1])?this.linkDeleteSelected(!1):this.linkSelected()}}dragSelectionStart(){this.cage.resizeCancel(),this.cage.hide(),window.clearSelection();for(const e of this.selection.get())e.sockets.hide(),e.locked?e.animateIcon('<i class="fa-solid fa-lock"></i>'):(e.slot&&e.parentNode.dragSelectionStart(),e.element.classList.add("drag"),e.transform.prev.store()),e.piemenu?.hide()}dragSelectionMove(){this.selection.transform.update({x:this.transform.delta.x/metaviz.render.offset.z,y:this.transform.delta.y/metaviz.render.offset.z});for(const e of this.selection.get())if(!e.locked)if(e.slot)e.parentNode.dragSelectionMove();else{e.setStyle("z-index","var(--z-node-drag)"),e.setStyle("pointer-events","none"),e.addPosition({x:this.transform.delta.x/metaviz.render.offset.z,y:this.transform.delta.y/metaviz.render.offset.z}),e.update();for(const t of e.links.get())t.update()}}dragSelectionEnd(){for(const e of this.selection.get())e.locked||(e.element.classList.remove("drag"),metaviz.config.snap.grid.enabled&&(e.setPosition(this.snapToGrid(e.transform.x,e.transform.y)),e.update(),e.links.update()),e.setStyle("pointer-events","auto"),e.setStyle("z-index","var(--z-node)"),e.edit(!0),0!=this.selection.transform.total()&&this.history.store({action:"move",nodes:[e.id],position:{x:e.transform.x,y:e.transform.y},positionPrev:{x:e.transform.prev.x,y:e.transform.prev.y}}))}dragSelectionCancel(){for(const e of this.selection.get())e.locked||(e.element.classList.remove("drag"),e.slot?e.parentNode.dragSelectionCancel():(e.animated(!0),setTimeout((()=>{e.animated(!1)}),1e3),e.subPosition(this.selection.transform.getOffset()),e.setStyle("pointer-events","auto"),e.setStyle("z-index","var(--z-node)"),e.edit(!1),e.update()))}dragLinkStart(){const e=this.pointer.clicked,t=metaviz.render.screen2World(this.transform),i={transform:{x:t.x,y:t.y},sockets:{get:e=>({x:i.transform.x,y:i.transform.y})},addLink:function(e){}};this.interaction.link=new registry.links.MetavizLinkBezier.proto({start:e,end:i}),e.addLink(this.interaction.link),metaviz.render.board.append(this.interaction.link.element)}dragLinkMove(){if(this.interaction.link&&this.interaction.link.end){const e=metaviz.render.screen2World(this.transform);this.interaction.link.end.transform.x=e.x,this.interaction.link.end.transform.y=e.y,this.interaction.link.update()}}dragLinkEnd(e){e&&this.interaction.link.start.id!=e.id&&null==metaviz.render.links.get(this.interaction.link.start,e)?(e.addLink(this.interaction.link),this.interaction.link.end=e,this.interaction.link.update(),this.history.store({action:"add",links:[this.interaction.link.serialize()]}),metaviz.render.links.list.push(this.interaction.link)):this.dragLinkCancel(),this.selection.clear()}dragLinkCancel(){this.interaction.link.start.delLink(this.interaction.link),this.interaction.link.element.remove(),this.interaction.link=null}dragBoxStart(e,t){this.selection.box.start(e,t),this.selection.box.show()}dragBoxMove(e,t){this.selection.box.end(e,t)}dragBoxEnd(){this.selection.box.intersection(metaviz.render.nodes.get()),this.selection.box.hide()}dragBoxCancel(){}arrangeSort(){if(!this.interaction.locked){const e=this.selection.get(),t=this.arrange.sort.arrange(e,this.arrange.settings);this.selection.clear(),e.forEach(((e,i)=>{this.history.store({action:"move",nodes:[e.id],position:{x:t[i].x,y:t[i].y}}),e.transform.x=t[i].x,e.transform.y=t[i].y})),metaviz.render.layers.update(e)}}arrangeHorizontal(){this.interaction.locked||(this.arrange.align.arrange(this.selection.get(),{direction:"horizontal",margin:this.arrange.settings.margin}),this.selection.clear())}arrangeVertical(){this.interaction.locked||(this.arrange.align.arrange(this.selection.get(),{direction:"vertical",margin:this.arrange.settings.margin}),this.selection.clear())}arrangeZ(e){for(const t of this.selection.get())t.setSortingZ(e),this.history.store({action:"move",nodes:[t.id],zindex:e})}arrangeReset(){if(!this.interaction.locked){for(const e of this.selection.get())e.transform.clear(),e.update(),this.history.store({action:"move",nodes:[e.id],position:{x:0,y:0},zindex:0});this.selection.clear()}}setBoardID(e){this.id=e}setBoardName(e){e&&(this.name=e,document.title=this.name,metaviz.events.call("update:projectname",e))}getBoardName(){return this.name}new(){this.selection.clear(),this.interaction.clear(),this.file.clear(),this.history.clear(),metaviz.render.clear(),metaviz.render.clear(),metaviz.render.center(),this.id=crypto.randomUUID()}async open(e=null){if(metaviz.system.features.nativeFileSystemApi){this.interaction.lock();try{const e=await window.showOpenFilePicker();e.length&&(this.file.handle=e[0])}catch(e){logging.info(e)}if(this.file.handle){const e=await this.file.handle.getFile();let t=null;try{t=JSON.parse(await e.text())}catch(e){alert("Can't recognize Metaviz file.")}if(t){"MetavizStack"==t.format&&metaviz.format.stack.in.deserialize(t);for(const e of metaviz.render.nodes.get())e.start();metaviz.events.call("on:loaded")}}this.interaction.unlock()}else alert("Native File System API not supported!")}flush(e=!0){this.selection.get().forEach((e=>e.flush())),e&&this.selection.clear()}save(){this.busy();const e=metaviz.format.stack.out.serialize(this.history.get());this.file.handle?this.saveLocalFile(e):(metaviz.exchange.download({data:e,name:"metaviz-diagram.mv"}),this.history.dirty=!1,this.idle())}async saveLocalFile(e){const t=await this.file.handle.createWritable();await t.write(e),await t.close(),this.history.dirty=!1,this.idle()}busy(){metaviz.render.container.style.cursor="progress",this.spinner.style.fillOpacity="1",this.spinner.style.display="block"}idle(){metaviz.render.container.style.cursor="default",this.spinner.style.fillOpacity="0",setTimeout((()=>{this.spinner.style.display="none"}),2e3)}centerNode(e,t=!1,i=!1){let n=null;"string"==typeof e?n=metaviz.render.nodes.get(e):"object"==typeof e&&(n=e),this.selection.clear(),this.menu.hide(),metaviz.render.center(n.getPosition(),"none",t?"smooth":"hard"),i&&this.selection.add(n)}render(e){this.selection.clear(),this.menu.hide();for(const e of metaviz.render.nodes.get())e.visible(!1);metaviz.render.layers.current.render(),metaviz.render.redraw()}}
class MetavizLinkBezier extends MetavizLink{constructor(t){super(t),this.curvature="curvature"in t?t.curvature:.4,this.element=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.element.classList.add("metaviz-link"),this.element.classList.add("metaviz-link-bezier"),this.element.dataset.id=this.id,this.path=document.createElementNS("http://www.w3.org/2000/svg","path"),this.element.appendChild(this.path),this.arrow=document.createElementNS("http://www.w3.org/2000/svg","polyline"),this.element.appendChild(this.arrow),this.circleStart=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.circleStart.setAttribute("r",6),this.element.appendChild(this.circleStart),this.circleEnd=document.createElementNS("http://www.w3.org/2000/svg","circle"),this.circleEnd.setAttribute("r",6),this.element.appendChild(this.circleEnd),this.update()}update(){if(this.start.transform.x<=this.end.transform.x){const{x:t,y:e}=this.start.sockets.get({x:this.end.transform.x,y:this.end.transform.y}),{x:s,y:r}=this.end.sockets.get({x:this.start.transform.x,y:this.start.transform.y}),i=t+Math.abs(s-t)*this.curvature,a=s-Math.abs(s-t)*this.curvature,h=(t+s)/2,c=(e+r)/2,n=Math.atan2(r-e,(s+a)/2-(t+i)/2);this.path.setAttribute("d",`M ${t} ${e} C ${i} ${e} ${a} ${r} ${s} ${r}`),this.arrow.setAttribute("points",`${h-6}, ${c-4} ${h+6}, ${c} ${h-6}, ${c+4} ${h-6}, ${c-4}`),this.arrow.setAttribute("transform",`rotate(${n*(180/Math.PI)} ${h} ${c})`),this.circleStart.setAttribute("cx",t),this.circleStart.setAttribute("cy",e),this.circleEnd.setAttribute("cx",s),this.circleEnd.setAttribute("cy",r)}else{const{x:t,y:e}=this.end.sockets.get({x:this.start.transform.x,y:this.start.transform.y}),{x:s,y:r}=this.start.sockets.get({x:this.end.transform.x,y:this.end.transform.y}),i=t+Math.abs(s-t)*this.curvature,a=s-Math.abs(s-t)*this.curvature,h=(t+s)/2,c=(e+r)/2,n=Math.atan2(r-e,(s+a)/2-(t+i)/2);this.path.setAttribute("d",`M ${t} ${e} C ${i} ${e} ${a} ${r} ${s} ${r}`),this.arrow.setAttribute("points",`${h+6}, ${c-4} ${h-6}, ${c} ${h+6}, ${c+4} ${h+6}, ${c-4}`),this.arrow.setAttribute("transform",`rotate(${n*(180/Math.PI)} ${h} ${c})`),this.circleStart.setAttribute("cx",s),this.circleStart.setAttribute("cy",r),this.circleEnd.setAttribute("cx",t),this.circleEnd.setAttribute("cy",e)}}}registry.add({proto:MetavizLinkBezier,name:"Link"});
class MetavizLinkSymlink extends MetavizLink{constructor(t){super(t),this.element=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.element.classList.add("metaviz-link"),this.element.classList.add("metaviz-link-symlink"),this.element.dataset.id=this.id,this.line=document.createElementNS("http://www.w3.org/2000/svg","line"),this.element.appendChild(this.line),this.update()}update(){const{x:t,y:e}=this.start.sockets.get({x:this.end.transform.x,y:this.end.transform.y}),{x:s,y:i}=this.end.sockets.get({x:this.start.transform.x,y:this.start.transform.y});this.line.setAttribute("x1",t),this.line.setAttribute("y1",e),this.line.setAttribute("x2",s),this.line.setAttribute("y2",i)}}registry.add({proto:MetavizLinkSymlink,name:"Symlink"});
class MetavizInStack{deserialize(e,t={}){metaviz.editor.history.set(e.history),metaviz.editor.history.recreate()}}
class MetavizOutStack{serialize(e){let n=`{\n"format": "MetavizStack",\n"version": 1,\n"id": "${metaviz.editor.id}",\n"name": "${metaviz.editor.name}",\n`;return n+='"history": [\n',e.forEach(((i,t)=>{let r={...i};"prev"in r&&delete r.prev,"positionPrev"in r&&delete r.positionPrev,"sizePrev"in r&&delete r.sizePrev,"parentPrev"in r&&delete r.parentPrev,"namePrev"in r&&delete r.namePrev,n+=JSON.stringify(r)+(t<e.length-1?",\n":"\n")})),n+="]\n}",n}}
class MetavizFilesystem{async openFile(e){if(metaviz.system.features.nativeFileSystemApi){const a=await metaviz.storage.db.tables.boards.get({id:e});if(a.handle){metaviz.editor.file.handle=a.handle;let e=!0;if("granted"!==await a.handle.queryPermission({mode:"readwrite"})&&(e=!1,"granted"===await a.handle.requestPermission({mode:"readwrite"})&&(e=!0)),e){const e=await a.handle.getFile();let t=null;try{t=JSON.parse(await e.text())}catch(e){alert("Error: Can't recognize Metaviz file.")}t&&(metaviz.format.json.in.deserialize(t)?(metaviz.render.layers.set("Base Layer"),metaviz.render.layers.current.update()):alert("Error: Unknown version or not a Metaviz file.")),metaviz.events.call("on:loaded")}}}else alert("Native File System API not supported!")}}
class MetavizNodePoint extends MetavizNode{constructor(t){super(t),this.setSize({width:20,height:20,border:4}),this.addSockets({center:new MetavizSocket({name:"center",node:{id:this.id},parent:this.element,transform:{x:this.transform.ox,y:this.transform.oy,border:this.transform.border}})})}elastic(t){1==t?(this.transform.ox=0,this.transform.oy=0,this.setStyle("transform","translate(0px, 0px) scale(1)")):super.elastic(!1)}miniature(t=!1){return`<div class="miniature metaviz-node-point" data-id="${this.id}"></div>`}}registry.add({proto:MetavizNodePoint,name:"Point",icon:'<i class="fas fa-bullseye"></i>'});
class MetavizNodeLabel extends MetavizNode{constructor(t){super(t),"text"in this.meta||(this.meta.text=""),"color"in this.meta||(this.meta.color="0"),"style"in this.meta||(this.meta.style="label"),"font"in this.meta||(this.meta.font="Roboto"),"rotate"in this.meta||(this.meta.rotate=0),"number"==typeof this.meta.color&&(this.meta.color=this.meta.color.toString()),this.addControls({input:new MetavizControlInput({name:"text",value:this.meta.text,onChange:t=>{metaviz.editor.history.store({action:"param",node:{id:this.id},data:{text:t},prev:{text:this.meta.text}}),this.meta.text=t}})}),this.controls.input.element.style.fontFamily=this.meta.font,this.setSize({width:176,height:24}),0!=this.meta.rotate&&(this.controls.input.element.style.rotate=this.meta.rotate+"deg"),this.element.classList.add("color-"+this.meta.color),this.element.classList.add("style-"+this.meta.style),this.meta.set=(t,e)=>{this.meta[t]=e,"color"==t?(this.element.classList.remove("color-0","color-1","color-2","color-3","color-4","color-5"),this.element.classList.add("color-"+this.meta.color),this.update()):"style"==t?(this.element.classList.remove("style-label","style-text","style-underline"),this.element.classList.add("style-"+this.meta.style),this.update()):"font"==t?this.controls.input.element.style.fontFamily=this.meta.font:"text"==t?this.controls.input.set(e):"rotate"==t&&(this.controls.input.element.style.rotate=e+"deg")},this.addSockets({east:new MetavizSocket({name:"east",node:{id:this.id},parent:this.element,transform:{x:this.transform.ox+this.transform.w/2,y:this.transform.oy}}),west:new MetavizSocket({name:"west",node:{id:this.id},parent:this.element,transform:{x:this.transform.ox-this.transform.w/2,y:this.transform.oy}})})}serialize(){return this.meta.text=this.controls.input.get(),super.serialize()}pipeline(){const t=super.pipeline();return t.add({text:this.controls.input.get()+"\n",calc:Number(this.controls.input.get().replace(/[^\d-\.]/g,""))}),t}menu(){return{options:[new MenuSelect({placeholder:"Style",options:{label:{icon:'<i class="fa-solid fa-user-tie"></i>',text:"Style: Label"},text:{icon:'<i class="fa-solid fa-user-tie"></i>',text:"Style: Only text"},underline:{icon:'<i class="fa-solid fa-user-tie"></i>',text:"Style: Underline"}},value:this.meta.style,onChange:t=>{metaviz.editor.history.store({action:"param",node:{id:this.id},data:{style:t},prev:{style:this.meta.style}}),this.meta.set("style",t)}}),new MenuSelect({placeholder:"Color",options:{0:{icon:'<div class="menu-icon-square" style="background-color: var(--paper-2)"></div>',text:"Color: Default"},1:{icon:'<div class="menu-icon-square" style="background-color: rgb(0, 117, 188)"></div>',text:"Color: Water"},2:{icon:'<div class="menu-icon-square" style="background-color: rgb(0, 67, 136)"></div>',text:"Color: Navy"},3:{icon:'<div class="menu-icon-square" style="background-color: var(--color-jade)"></div>',text:"Color: Jade"},4:{icon:'<div class="menu-icon-square" style="background-color: rgb(254, 192, 11)"></div>',text:"Color: Sunny"},5:{icon:'<div class="menu-icon-square" style="background-color: #e89191"></div>',text:"Color: Fire"}},value:this.meta.color,onChange:t=>{metaviz.editor.history.store({action:"param",node:{id:this.id},data:{color:t},prev:{color:this.meta.color}}),this.meta.set("color",t)}}),new MenuSelect({placeholder:"Font",options:{Roboto:{icon:'<i class="fa-solid fa-font"></i>',text:"Font: Roboto"},Allura:{icon:'<i class="fa-solid fa-font"></i>',text:"Font: Allura"},Mansalva:{icon:'<i class="fa-solid fa-font"></i>',text:"Font: Mansalva"}},value:this.meta.font,onChange:t=>{metaviz.editor.history.store({action:"param",node:{id:this.id},data:{font:t},prev:{font:this.meta.font}}),this.meta.set("font",t)}}),new MenuInput({placeholder:"Rotate",value:this.meta.rotate,onChange:t=>{metaviz.editor.history.store({action:"param",node:{id:this.id},data:{rotate:parseInt(t.target.value)},prev:{rotate:this.meta.rotate}}),this.meta.set("rotate",parseInt(t.target.value))}})]}}setSize(t,e=!1){super.setSize(t,e),this.controls.input.element.style.fontSize=.69*t.height+"px"}getSize(){const t=this.getBounds(this.transform.x-this.transform.w/2,this.transform.y-this.transform.h/2,this.transform.x+this.transform.w/2,this.transform.y+this.transform.h/2,this.meta.rotate);return{width:t.w,height:t.h,minWidth:64,minHeight:16,maxWidth:1024,maxHeight:1024,mode:"free"}}getBounds(t,e,s,o,i){var a=t,r=e,n=s,l=e,h=s,c=o,m=t,d=o,u=(a+n+h+m)/4,p=(r+l+c+d)/4,y=i*(Math.PI/180),f=Math.sin(y),v=Math.cos(y),x=v*(a-u)-f*(r-p)+u,g=f*(a-u)+v*(r-p)+p,b=v*(n-u)-f*(l-p)+u,w=f*(n-u)+v*(l-p)+p,z=v*(h-u)-f*(c-p)+u,M=f*(h-u)+v*(c-p)+p,S=v*(m-u)-f*(d-p)+u,C=f*(m-u)+v*(d-p)+p;return{left:t=Math.min(x,b,z,S),top:e=Math.min(g,w,M,C),right:s=Math.max(x,b,z,S),bottom:o=Math.max(g,w,M,C),w:s-t,h:o-e}}search(t){return this.meta.text.toLowerCase().includes(t.toLowerCase())}elastic(t){1==t?(super.elastic(!0),this.controls.input.element.style.width="100%",this.controls.input.element.style.height="100%"):super.elastic(!1)}miniature(t=!1){return this.serialize(),`<div class="miniature metaviz-node-label color-${this.meta.color}" data-id="${this.id}">${t?this.meta.text.synopsis(3):"Label"}</div>`}}registry.add({proto:MetavizNodeLabel,name:"Label",icon:'<i class="fas fa-tag"></i>'});
class MetavizNodeText extends MetavizNode{constructor(t){super(t),this.looks={sticky:{name:"Sticky Note",width:168,height:168},a6:{name:"Page A6",width:232,height:328},a5:{name:"Page A5",width:400,height:565},a4:{name:"Page A4",width:800,height:1131},comic:{name:"Comic Cloud",width:180,height:100}},this.colors={0:{icon:'<div class="menu-icon-square" style="background-color: var(--paper-2)"></div>',text:"Color Default",class:"palette-0"},1:{icon:'<div class="menu-icon-square" style="background-color: var(--color-sky)"></div>',text:"Color Sky",class:"palette-1"},2:{icon:'<div class="menu-icon-square" style="background-color: rgb(0, 117, 188)"></div>',text:"Color Water",class:"palette-2"},3:{icon:'<div class="menu-icon-square" style="background-color: rgb(0, 67, 136)"></div>',text:"Color Navy",class:"palette-3"},4:{icon:'<div class="menu-icon-square" style="background-color: var(--color-jade)"></div>',text:"Color Jade",class:"palette-4"},5:{icon:'<div class="menu-icon-square" style="background-color: rgb(254, 192, 11)"></div>',text:"Color Sunny",class:"palette-5"}},"look"in this.meta||(this.meta.look="sticky"),"spellcheck"in this.meta||(this.meta.spellcheck=!0),"page_1"in this.meta||(this.meta.page_1=""),"lastpage"in this.meta||(this.meta.lastpage=1),"currpage"in this.meta||(this.meta.currpage=1),"palette"in this.meta||(this.meta.palette="0"),this.page=this.meta.currpage,this.element.classList.add("palette-"+this.meta.palette),0==this.transform.w&&this.setSize({width:this.looks[this.meta.look].width,height:this.looks[this.meta.look].height}),this.addControls({textarea:new MetavizControlRichText({name:`page_${this.page}`,value:this.getText(),spellcheck:this.meta.spellcheck,onChange:t=>{const e={action:"param",node:{id:this.id},meta:{},metaPrev:{}};e.meta[`page_${this.page}`]=t,e.metaPrev[`page_${this.page}`]=this.meta[`page_${this.page}`],metaviz.editor.history.store(e),this.meta[`page_${this.page}`]=t,metaviz.events.enable("viewer:keydown"),metaviz.events.enable("viewer:keyup"),metaviz.events.enable("editor:paste"),metaviz.events.enable("editor:keydown"),metaviz.events.enable("editor:keyup")},onPrevPage:()=>{this.page>1&&(this.meta[`page_${this.page}`]=this.controls.textarea.get(),this.page--,this.meta.currpage=this.page,this.controls.textarea.set(this.meta[`page_${this.page}`]),this.controls.textarea.page(this.meta.currpage,this.meta.lastpage),metaviz.editor.history.store({action:"param",node:{id:this.id},meta:{currpage:this.meta.currpage},metaPrev:{currpage:this.meta.currpage+1}}),this.update())},onNextPage:()=>{this.meta[`page_${this.page}`]=this.controls.textarea.get(),this.page++,this.meta.currpage=this.page,this.meta.lastpage<this.page?(this.meta.lastpage++,this.controls.textarea.clear(),metaviz.editor.history.store({action:"param",node:{id:this.id},meta:{lastpage:this.meta.lastpage},metaPrev:{lastpage:this.meta.lastpage-1}})):this.controls.textarea.set(this.meta[`page_${this.page}`]),this.controls.textarea.page(this.meta.currpage,this.meta.lastpage),metaviz.editor.history.store({action:"param",node:{id:this.id},meta:{currpage:this.meta.currpage},metaPrev:{currpage:this.meta.currpage-1}}),this.update()}})}),this.controls.textarea.hideToolbar(),this.addOptions({look:new MenuSelect({placeholder:"Look",options:this.genLookOptions(),value:this.meta.look,onChange:t=>{metaviz.editor.history.store({action:"param",node:{id:this.id},meta:{look:t},metaPrev:{look:this.meta.look}}),this.meta.set("look",t),this.setSize(this.looks[this.meta.look],!0),this.setLook(t),metaviz.editor.menu.hide(),metaviz.render.layers.current.update()}}),palette:new MenuSelect({placeholder:"Color palette",options:this.colors,value:this.meta.palette,onChange:t=>{metaviz.editor.history.store({action:"param",node:{id:this.id},meta:{palette:t},metaPrev:{palette:this.meta.palette}}),this.meta.set("palette",t),metaviz.editor.menu.hide()}}),spellcheck:new MenuSwitch({text:"Spellcheck",value:this.meta.spellcheck,onChange:t=>{metaviz.editor.history.store({action:"param",node:{id:this.id},meta:{spellcheck:t},metaPrev:{spellcheck:this.meta.spellcheck}}),this.meta.spellcheck=t,this.controls.textarea.spellcheck(t)}})}),this.meta.set=(t,e)=>{if(this.meta[t]=e,t.startsWith("page_")){parseInt(t.replace("page_",""))==this.page&&this.controls.textarea.set(e)}else if("palette"==t){for(const[t,e]of Object.entries(this.colors))this.element.classList.remove(e.class);this.element.classList.add(this.colors[this.meta.palette].class),this.update()}},this.addSockets()}start(){this.setLook(this.meta.look),this.controls.textarea.page(this.meta.currpage,this.meta.lastpage)}setLook(t){for(const[t,e]of Object.entries(this.looks))this.element.classList.remove(t);this.element.classList.add(t),this.transform.w<200||this.transform.h<200?this.controls.textarea.hideToolbar():this.selected&&this.controls.textarea.showToolbar()}getSize(){return{width:this.transform.w,height:this.transform.h,minWidth:this.transform.wmin,minHeight:this.transform.hmin,maxWidth:this.transform.wmax,maxHeight:this.transform.hmax,mode:"free"}}search(t){return!1}miniature(t=!1){return this.serialize(),`<div class="miniature metaviz-node-text" data-id="${this.id}">${t?`<h2>${this.getText(1).synopsis(10)}</h2>▬▬▬▬▬▬▬▬▬<br>▬▬▬▬▬▬▬▬<br>▬▬▬▬▬<br>▬▬▬▬▬▬▬▬<br>▬▬▬▬`:"Page"}</div>`}select(){super.select(),this.transform.w>199&&this.transform.h>199&&this.controls.textarea.showToolbar(),this.controls.textarea.edit(!0)}deselect(){super.deselect(),this.controls.textarea.edit(!1),this.controls.textarea.hideToolbar()}genLookOptions(){const t={};for(const[e,a]of Object.entries(this.looks))t[e]={icon:"",text:a.name};return t}getText(t=this.page){if("all"==t){const t="";for(let e=0;e<this.meta.lastpage;e++)t+=this.meta[`page_${e}`];return t}return this.meta[`page_${t}`]}flush(){const t={action:"param",node:{id:this.id},meta:{},metaPrev:{}};t.meta[`page_${this.page}`]=this.controls.textarea.get(),t.metaPrev[`page_${this.page}`]=this.meta[`page_${this.page}`],metaviz.editor.history.store(t)}update(){super.update(),this.setLook(this.meta.look)}}registry.add({proto:MetavizNodeText,name:"Text",icon:'<i class="fas fa-sticky-note"></i>'});
class MetavizNodeClipart extends MetavizNode{constructor(e){super(e),"name"in this.meta||(this.meta.name=""),this.addControls({icon:new MetavizControlIcon(...this.getIconName())}),this.setSize({width:70,height:70,minWidth:16,minHeight:16}),this.addOptions({picker:new MetavizEmojiPicker({onClick:e=>{this.meta.set("name",e.unicode),metaviz.editor.history.store({action:"param",node:{id:this.id},data:{name:e.unicode},dataPrev:{url:this.meta.name}}),metaviz.editor.menu.hide()}})}),this.meta.set=(e,t)=>{"name"==e&&(this.meta.name=t,this.controls.icon.set(...this.getIconName()))},this.addSockets({center:new MetavizSocket({name:"center",node:{id:this.id},parent:this.element,transform:{x:this.transform.ox,y:this.transform.oy}})})}getIconName(){if(/\p{Extended_Pictographic}/gu.test(this.meta.name))return["emoji",this.meta.name];return/[^\u0000-\u007F]/g.test(this.meta.name)?["emoji",this.meta.name]:["emoji","😀"]}setSize(e,t=!1){super.setSize(e,t),this.controls.icon.element.style.fontSize=.76*e.width+"px"}search(e){return this.meta.name.toLowerCase().includes(e.toLowerCase())}miniature(e=!1){return this.serialize(),`<div class="miniature miniature-node-clipart" style="width: 100%; height: 100%;" data-id="${this.id}">${e?this.control.icon.control.outerHTML:'<i class="fa-solid fa-palette"></i>'}</div>`}}registry.add({proto:MetavizNodeClipart,name:"Clipart",icon:'<i class="fas fa-palette"></i>'});class MetavizEmojiPicker extends TotalProMenuWidget{constructor(e){super(e),this.element.classList.add("metaviz-emoji-picker");const t=document.createElement("emoji-picker");t.classList.add("light"),t.addEventListener("emoji-click",(t=>e.onClick(t.detail))),this.element.append(t)}}